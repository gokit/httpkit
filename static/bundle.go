package static


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
)

type fileData struct{
  path string
  root string
  data []byte
}

var (
  assets = map[string][]string{
    
      ".tml": []string{  // all .tml assets.
        
          "http-api-json.tml",
        
          "http-api-mock-functions.tml",
        
          "http-api-mock.tml",
        
          "http-api-readme.tml",
        
          "http-api-test.tml",
        
          "http-api.tml",
        
      },
    
  }

  assetFiles = map[string]fileData{
    
      
        "http-api-json.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xc1\x6b\xc2\x30\x14\x87\xcf\x0d\xe4\x7f\xf8\xad\x87\x61\x41\xea\x7d\xc3\xc3\x18\xec\xb0\x83\x0e\xc4\xd3\x18\x18\xe3\xab\xc6\xb5\x89\xbc\x46\x65\x84\xfc\xef\x23\xad\x32\x0f\x13\xe6\x2e\x85\xe6\x3d\xbe\xef\xe3\x1d\x14\x23\x84\xda\x1d\x89\x51\xce\x3c\xef\xb5\x2f\xa7\xcb\x2d\x69\x5f\x4e\x54\x43\xdd\x27\xc6\xd7\xd9\x74\x82\x31\x16\x21\xa0\x51\xbb\xee\xef\xb4\x8c\x7c\xdb\x3a\x9b\x23\xcf\x11\xe3\x42\x0a\x29\xfe\x46\x7c\x66\x52\x9e\x7e\xe3\xf6\x93\x27\xed\x8d\xb3\xff\xa5\xcf\x77\xab\x2b\xf4\x7e\x72\x8d\x3e\x1a\xa1\x76\x6a\x95\x56\x5f\x1c\x83\xc9\xef\xd9\xb6\x50\xb0\x74\x84\xb1\xad\x57\x56\x13\x5c\x05\x85\x10\xce\xfa\x37\xa5\x3f\xd5\x9a\x62\x2c\x7f\xde\x2e\x92\x62\x44\xc5\xae\x81\xdf\x10\x76\xec\x0e\x66\x45\x48\x5e\x68\x67\x3d\x59\x5f\x4a\x51\xed\xad\xbe\x14\x0f\x4e\x23\xb4\x9e\x8d\x5d\x17\x18\xdc\x60\x1b\x82\x98\x1d\x17\x08\x52\x64\xe9\x5c\x54\x53\x73\x4b\x6e\x3a\x44\x66\xaa\x84\xc1\xc3\xb8\x6b\x2d\xe7\xb6\x51\xdc\x6e\x54\x3d\x78\xff\x58\x7e\x79\x3a\x17\x16\x43\xdc\x27\x7e\xf1\xd8\xad\xdf\x8d\x61\x4d\xdd\x99\xb3\xfe\x78\xb7\x88\x43\xdf\x2e\x45\xd6\x37\x9c\x08\x89\x3f\x4c\x5c\x29\xa2\x14\xdf\x01\x00\x00\xff\xff\x5f\xe2\x7b\xa9\xb1\x02\x00\x00"),
          path: "http-api-json.tml",
          root: "http-api-json.tml",
        },
      
        "http-api-mock-functions.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x52\xbb\x8e\x9c\x30\x14\xed\x91\xf8\x87\xab\xad\x40\x5a\x99\x3e\xa9\xa2\x49\x93\x22\x33\x91\x92\xfd\x00\xaf\x7d\x66\x70\x16\x6c\x64\x5f\x60\x22\xc4\xbf\x47\xc6\x10\x2d\xd1\x4e\xa4\x89\xd2\xa4\xe1\x75\x39\x0f\xdf\x73\xaa\x8a\x3e\x3b\xf5\x72\x78\x22\x8d\xb3\xb1\x08\x24\xa9\x93\xea\x45\x5e\x40\x0d\x06\x34\x34\x48\x6f\xe4\x73\x03\x62\x47\x52\x29\x84\xf8\x8b\xb1\x81\xa5\x55\x20\x77\x26\x49\xed\xc2\x20\xf2\x6c\x90\x7e\xa3\x5b\x3f\xe6\x59\x9e\x55\xd5\xfa\x42\x9d\x77\x83\xd1\x8b\x48\x60\xdf\x2b\xa6\xb1\x36\xaa\x26\xe5\x2c\x4b\x63\x03\xb5\xe0\xda\xe9\x10\xb5\x94\x87\x64\x90\xb4\x9a\xfa\x4e\xc7\xc7\x69\x12\x5f\x17\x94\x38\x3d\x7f\x87\x62\x71\x94\x2d\xe6\xf9\x7d\x9e\xf1\x8f\x0e\x9b\x46\x22\x9e\xe6\x55\xf9\x69\xc1\xde\x80\xae\xcc\xd1\x0f\xae\x86\x8d\xbd\xbc\x12\xf9\x92\xd6\x30\xcf\xe2\x16\xda\x43\x39\xaf\x69\x34\x5c\x13\xd7\xa0\x8b\x19\x60\x37\xb7\x86\xd1\x8a\x3c\x3b\xf7\x56\x15\xc9\x5a\xb9\x9a\x29\x14\x5f\x97\x23\xe3\xca\xe2\x90\xee\x8f\x1b\xd9\x1d\xfa\x8f\xab\x94\x8f\xa0\x44\xfd\x41\xb1\x71\x76\x0f\xdd\x4d\x76\x04\x25\x15\x77\xc9\xc1\x7b\xe7\xcb\x29\xcf\x88\x88\xd2\xb5\xaa\xe8\xdb\xe9\xe3\xa9\xd0\xb1\x2b\xae\x83\x2f\xdf\xfd\x1a\x9c\x06\x78\x6f\x34\x28\xee\x20\xaa\xa7\x43\x5b\x0e\x69\x65\x63\x2d\x99\x42\xed\xfa\x46\x53\x2d\xbb\x0e\x56\xc4\xd0\x22\xda\x83\x7b\x6f\xef\x59\xc6\xb4\xf9\x0b\xe2\x88\xb1\x78\x38\x3a\xa6\x4f\x6d\xd7\xa0\x85\x65\xe8\x87\x32\xcf\xb6\x4a\x1c\x96\x66\xdd\x0a\x35\xf5\x2e\x56\xc2\x62\xfc\x9b\x3a\x9c\xbd\x6b\x5f\xd5\x61\xed\x71\xac\xe8\xef\x75\xf8\xa3\x91\xb7\x5b\x82\x06\x6d\x34\x95\xa0\x6f\xc5\xbd\x9b\xfc\x83\xb8\x69\xda\x42\xf9\xcf\xb2\xfe\x19\x00\x00\xff\xff\x51\xd2\x08\x10\xdb\x04\x00\x00"),
          path: "http-api-mock-functions.tml",
          root: "http-api-mock-functions.tml",
        },
      
        "http-api-mock.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x96\xcd\x6e\xdb\x38\x10\xc7\xef\x06\xfc\x0e\x93\x00\xbb\x90\x0a\x41\xbe\xb7\xc8\x21\x9b\x14\x8b\x00\xdb\xd4\x68\xd0\xd3\x62\xb1\xa0\xc5\x91\xcd\x35\x45\xaa\x24\x25\x27\x10\xf4\xee\x0b\x8a\xd4\xb7\xe3\x54\x45\x2e\x51\x2c\x92\xf3\xf1\x9f\xdf\x0c\xb5\xd9\xc0\x17\x99\x1c\x6f\xb7\x0f\x5f\x73\x54\xc4\x48\x05\x14\x53\x26\x50\x03\x11\xa0\x8d\x2a\x12\x53\x28\x84\xd3\x81\x25\x07\x60\x59\xce\x31\x43\x61\x34\x98\x03\xc2\xf0\x54\x2a\x15\xe4\x4a\x96\x8c\x32\xb1\x87\xf5\x6a\xb3\x01\x02\x99\x4c\x8e\x50\x68\xb2\x47\x60\x02\x0c\x6a\xa3\x9b\x8d\x85\x46\x38\x31\x73\x68\xac\x54\xd5\x8f\x42\x1a\x84\xf8\xa9\xf1\x16\x7f\xdd\xfd\x87\x89\x89\x1f\x49\x86\x75\x0d\x07\x63\x72\xeb\x28\x5e\xaf\xcc\x4b\x8e\xb3\x68\x5d\x88\xd5\x7a\x05\x00\xa0\x8d\x54\x08\x1f\xf4\x8b\x48\x32\x92\xc7\x5f\x48\xbe\x5e\xd5\xeb\x55\x13\xcd\x23\x9e\xa6\x67\x15\x9a\x42\x09\x0d\x04\x04\x9e\x80\x09\x6d\x88\x48\x10\x64\x0a\x64\xea\x27\x5e\xaf\xd2\x42\x24\x67\xac\x04\x21\x7c\x98\x1a\xf6\xe1\x38\xfb\xf0\xfb\x64\xd9\xaf\x76\x01\x7f\xb4\xee\x83\x41\xd0\x61\xe4\x76\xd4\x7d\xf4\xf7\xc8\xd1\xa0\x57\x18\x9d\xfc\xb2\xb1\xc7\xa4\x00\x23\x41\x61\x26\x4b\x04\x02\x7b\x56\xda\x0a\x28\x4c\xa4\xa2\xc0\x28\x0a\xc3\x52\x86\x14\x76\x2f\xf0\x70\xdf\xe6\x11\x64\xb3\xa8\x43\xef\x24\x48\xcc\x33\x24\x52\x18\x7c\x36\xf1\x9d\x7b\x46\x90\x17\x3b\xce\x92\x87\x7b\x2b\x38\x13\xfb\x10\x50\xa9\x3e\x53\x96\xc2\xbf\x11\x1c\x88\x86\x8f\x37\x90\xc5\x4d\x5a\xf1\x5f\x92\xd0\xa0\x3d\x17\x7e\x82\x2b\xbb\x3e\x48\xde\xcb\x93\x66\x26\xfe\x6c\x8d\xa5\xc1\xf5\x37\x17\x35\x95\xa8\x41\x48\x03\xf8\xcc\x2c\x33\x0d\x2b\x8c\xc2\x6f\x3f\xae\xfb\x48\xc2\x4e\x24\xf7\x4f\xeb\xd6\x67\x31\xd9\xe6\x9d\x09\xc6\x7b\x51\xff\x44\x73\xcb\xf9\x00\x03\xcd\x99\xaf\x3f\xe7\x40\x4a\xc2\x38\xd9\x71\x6c\xb5\x94\x29\x34\x08\x56\x55\x8b\xea\x96\x24\x47\xb2\xc7\xba\x8e\xfb\x77\x23\x7c\x2f\xca\xed\xdc\x9f\x97\x5b\x2a\x8a\xca\x6b\xed\x7f\xfd\xf1\xd2\xfd\xce\x5d\x47\x99\x08\x14\xea\x5c\x0a\x8d\x6a\x8b\x6a\xeb\xdf\x86\x10\xfc\xfd\xcf\x82\x20\x23\x67\xaa\x29\x68\xd8\x16\xa8\x24\xca\xe7\xad\x61\x91\xb5\x69\x39\xbe\x11\xb1\xc7\xc0\xaa\x10\x1c\x23\x28\xad\x2f\x54\x29\x49\xb0\xaa\x43\xd8\x49\xc9\x87\x48\xb0\x14\x90\x63\x16\x81\x3c\x5a\x92\xca\x38\x58\xe0\x39\xfc\x64\x8f\x0d\xac\xb9\xba\xbb\x1c\x6e\x80\xe4\x39\x0a\x1a\xf8\x17\x51\xe3\x28\xec\x37\x77\x81\x0f\x68\x31\xaa\x40\x4f\x59\xd8\x2e\xfb\xa5\xce\x0c\x47\xd1\xda\x0c\xa3\x19\x5f\x76\xbb\x62\x58\xda\x79\xda\x72\xb4\x23\x1a\x29\xd8\xb6\x3d\x74\x1d\x4d\x3b\xac\xdf\x42\xe6\x27\xdb\x73\x89\x70\x6d\xed\xbd\x74\xae\x02\xa9\x2c\x04\x7d\xbd\x9d\xbb\xbe\xbf\x6a\x36\xce\xdb\x7a\x81\xff\xaa\x8e\xde\x6d\x0a\xa8\xcf\x03\x7e\x6c\x26\xcb\x10\xea\xd3\x1a\xa3\xf4\x6b\x49\x35\xb2\xea\xf8\x11\x4f\xf3\xa4\x32\x62\x92\x43\x33\x50\xae\x67\x39\x78\xc4\x5c\x2a\x23\xa4\xbe\xe7\x94\x18\x84\xa2\x79\xe8\xd9\xb8\xef\x2e\xd5\x3d\x2b\x51\x34\xd7\x5a\x49\x78\x81\x17\xa1\x72\x36\x7f\x8a\x2b\xd7\x35\x56\x06\x77\xe8\x36\xb1\xf7\xcf\x58\x8c\xd1\xca\x58\x5d\x27\x48\xb5\x5e\x55\x95\xd5\xd8\x6f\x7d\xd0\x4f\x2c\x63\x9c\x28\xb0\xd3\x63\x38\x3b\x9e\xec\xdf\x8e\xb9\x51\xcb\x0e\xe7\x79\x55\x01\x72\x8d\xdd\x71\x21\x4f\x43\x0a\xce\x03\xbc\x8c\x0b\x78\x03\x8c\x61\xa5\x1f\xa5\x71\xdd\xb3\x61\xa2\x24\x9c\xd1\x69\x95\xed\xc3\x47\x8a\x3e\x52\x54\xca\x86\x6a\x6b\x73\xf7\xdd\xeb\xf2\x4a\x2c\xb6\x50\x51\x9f\xe3\x40\x13\x3b\x3d\x95\x82\xab\x1b\x2b\xcb\xf9\x20\x5f\xb9\x33\x9d\xd0\x3e\x9a\x78\xdb\x09\xee\xdf\x4c\x87\x5f\xa7\xba\xa0\x8d\xe8\x2d\x9d\x77\x0a\x2d\x9d\x84\xd2\xf6\xa3\xaa\xfd\x0c\x11\x46\xb6\x5c\x0e\x70\x75\xce\x2f\xb1\xe9\x2c\x9e\x67\xb3\x45\xd1\xed\x39\x87\xe2\x68\x65\x52\xd0\x5f\x1c\x90\x9e\x5c\x67\xf9\x2d\x72\x71\xac\xe6\x1c\x5f\xec\x3b\x7c\x06\xf1\x79\x34\x9c\xe3\x8b\x68\x2c\x20\x62\xf9\x3c\x7b\x27\x80\xda\xe4\x66\x24\xfd\x1f\x00\x00\xff\xff\xb5\xf8\x5b\x2b\x91\x0c\x00\x00"),
          path: "http-api-mock.tml",
          root: "http-api-mock.tml",
        },
      
        "http-api-readme.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x97\xdf\x6f\x22\x37\x10\xc7\xdf\x91\xf8\x1f\x46\xe1\x25\x39\xe5\x36\x69\x75\x7d\x41\xea\x43\x2e\x47\xd3\x54\xed\x05\x15\xee\xe9\x74\xea\x1a\x7b\x60\x9d\x33\xb6\x6b\xcf\x92\xa0\xd5\xfe\xef\x95\xbd\x86\x40\x0a\x04\xd2\xa8\x55\xaa\xcb\x43\x56\xb2\x67\xbf\xf3\xc3\x9f\x19\x2f\x55\x95\x0d\xc8\x95\x9c\xb2\x9b\xd1\x2d\x72\xca\x3e\xb2\x29\xd6\x35\xfc\x3c\x1c\xf6\xe1\xa2\x7f\x0d\xed\xd6\x8f\xbb\xff\xda\xad\x76\xeb\x49\x15\xe9\x81\x01\x2b\xc9\xc0\x04\x35\x3a\x46\x28\xa0\x20\xb2\xc0\xac\x84\xb1\x71\x40\x05\x82\x8f\x12\x90\x6f\x54\x4b\x92\x79\x16\xfc\x0d\x0b\x8c\xb2\x78\x6f\x91\x93\x8f\x6f\x97\x1e\x1d\x90\x01\x39\xb5\x0a\xa7\xa8\x09\x98\x16\x60\x9d\x99\x49\x81\xd1\x62\xc4\xf8\x57\xd4\x02\xa4\x26\x74\x63\xc6\x31\x98\x27\x03\x01\xa5\x16\xe8\x94\xd4\x08\x62\xd4\x98\x30\x4e\xd2\xe8\x6e\x70\x98\xe7\xf9\xc4\xb4\x5b\x34\xb7\x08\xef\x1f\xcb\x54\xed\x16\x00\xc0\x07\x54\x48\x78\xcc\x8d\x26\xbc\xa7\xec\xb2\x79\x9e\x86\xb4\xa4\x9e\x9c\x00\x3a\x67\x5c\x63\x7a\x85\xb4\xdd\xee\xf8\x21\xff\x3e\xe3\x5f\xd9\x04\xeb\x3a\xdb\x52\xe1\xd3\x46\xf5\xa4\x91\xfd\x64\x05\xdb\x1e\xc1\x29\x54\x55\xd6\x98\x5c\xc4\xcc\xd6\xe5\xd7\x76\xd6\x9c\x3c\x0e\xfd\x42\xa9\xed\x3e\x16\x4f\xa9\x29\xfe\x3b\x81\xe3\xcf\x5f\x0e\xca\x28\xbe\xb9\x9a\xd6\xa5\xc3\x8d\x69\x55\x55\xd6\x6c\x6d\x4a\x67\x6d\xe7\x51\x3a\xcf\xab\x70\x1d\x31\x08\x34\x5c\x53\x20\xcf\x78\x6c\xc8\x1b\x1b\xa5\xcc\x9d\xd4\x13\x98\x22\x15\x46\xf8\x48\x34\x32\x5e\x00\x6a\x61\x8d\xd4\x14\x21\xea\x74\x52\x2a\x50\x41\xff\x66\x30\x84\xb3\x2d\x3e\xcf\xa0\x0e\xd6\x1d\xf8\x2d\xea\x75\x21\x1f\x97\x9a\xc3\x71\x68\x96\x37\xa1\xa7\x2e\xfa\xd7\x27\xcb\xb2\xd0\x3d\xbc\x09\xbd\x54\x92\x54\x8b\xe2\xa4\x23\x8b\xd1\x26\x9f\x0e\x39\xca\x59\x0a\x79\x49\xbd\x43\x6e\x9c\x00\x33\x8e\xcb\x3b\xeb\x06\x91\xfe\xbb\x42\xf2\x22\xf4\xb3\x40\x25\x71\x86\x22\xbe\xd8\x6e\xfd\x32\xb8\xf9\x08\xf1\x88\x34\x85\xbe\x0a\xab\x8b\xf6\xcf\x60\x58\x48\x0f\x77\x52\x29\x90\x1a\xa8\x74\x1a\x1c\xc6\x07\x03\x87\x3e\x34\xb1\x9c\x85\x01\xc0\xa8\xf4\xc0\x8d\xc0\xd8\xe6\x6f\xa1\x17\x1b\x1c\x05\x5c\x26\xe5\xe1\xdc\x62\x17\x52\x4b\x86\xac\x13\x22\xcd\xf6\xdb\x66\x9b\x59\xab\x24\x67\x21\x85\xb3\x5b\x6f\xf4\xf2\xe0\x56\x04\x7f\xc7\x3f\x4b\xf4\x04\x7d\xe6\xd8\x14\x09\x9d\x4f\xa2\xbb\x8c\xdf\x1b\x31\x4f\x66\x8d\x6e\x55\xc1\x94\xd9\x98\xfb\x5a\xe5\xe0\x68\xe4\x8d\x3e\x82\xa3\xdb\xf8\xa8\xeb\x4d\xaa\x83\x26\xdd\x4b\x23\x70\xe9\xfb\x27\x26\x55\xe9\xb0\x0b\x3f\x9c\x9f\xb7\x5b\x83\x92\x73\xf4\xbe\x0b\xdf\x9f\x7f\xb7\x39\x2e\x6f\x8d\xf6\xb8\x3b\xb0\x06\xb1\xed\x21\x75\x3a\x70\xd5\xdb\x41\x63\xd7\x96\x23\x25\xf9\x1f\x52\xec\x41\x65\x1c\x6d\x4f\x21\x79\x85\x14\x00\x70\x91\x47\x06\x13\x39\x0b\xdd\xf3\x37\x16\x37\xde\x29\x91\xc2\xb1\x33\xd3\x35\xc4\x12\x4f\x49\x26\x80\x1e\xd8\xf6\xa5\x22\x60\xc1\x45\xa8\x44\xbb\xe5\x52\xbd\x32\xb8\xa6\x70\x61\x3c\x6a\x86\xfc\x21\xd3\x1c\xec\x02\x8c\x20\x10\xcd\xc2\x02\xa5\x4b\x46\xa0\x26\x39\x9e\xc7\x8d\x26\xee\xff\x92\xd8\x20\xb8\x7a\x4a\x07\x10\xfc\x0f\xb1\x3c\x7f\x3e\x96\xfb\xf5\xcb\x53\x70\xee\x87\x64\xbc\xb2\x0e\xa3\x52\xa9\x74\xb0\xfe\x79\x44\xbe\x92\x09\xf6\xef\x9e\xff\xe7\xbd\x01\xf8\xb2\x4a\x40\xff\xd3\x4b\x8d\xa7\xc5\x27\xd2\x53\x2c\x34\x76\xc0\x88\x70\x6a\xc3\x17\xa6\x81\x32\x2d\xfd\x3f\xc6\x15\xdc\x49\x2a\xd6\xf5\xe2\xa9\xb8\x04\xca\xc8\x88\xf9\x2b\x1d\x69\xab\x8c\xad\x7e\xd5\xbe\xfc\xa5\xfc\x6e\xa9\xb0\x27\xff\x0f\x48\x7f\xe8\xfd\xda\x1b\xf6\x5e\x88\xea\xc5\x4f\x8f\x7d\x26\x9c\x88\xb6\xdf\xae\xdd\x57\x7d\xed\xbe\x3b\x6c\xec\xe6\x79\xfe\x57\x00\x00\x00\xff\xff\x14\x8a\x04\x80\xe9\x0f\x00\x00"),
          path: "http-api-readme.tml",
          root: "http-api-readme.tml",
        },
      
        "http-api-test.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xdf\x4f\xe3\x46\x10\x7e\x2e\x12\xff\xc3\xd4\x12\x27\xfb\x1a\x6d\xda\xd7\x54\x79\xb8\xf2\xe3\x8e\x96\x42\x44\x82\xfa\x58\x39\xf6\x04\xf6\x6e\xe3\x0d\xbb\xe3\x00\x8a\xf2\xbf\x57\xb3\xeb\x18\xc8\x05\x70\x48\x42\x4b\xe3\x7b\x38\x84\xe3\x7c\xdf\xec\xb7\x33\xdf\x78\xc7\x8c\x63\x03\xe1\xee\x0e\x00\x00\x8e\x31\x23\x0b\x6d\x18\x22\x19\x99\x58\x71\x8a\x37\x61\x92\x5b\xd2\x43\xd1\xa5\x38\xf9\x76\x20\xed\x48\xc5\x77\xa1\xb6\xa2\x4b\xa9\xce\x29\x8a\xfc\x37\xc7\x68\xac\xd4\x19\xb4\x21\x18\xff\x12\xec\xee\x44\xbb\x3b\xbb\x3b\x83\x3c\x4b\xc0\xe0\xa5\xb4\x84\xe6\x5c\xe7\x84\xa1\xe1\xff\x0d\x5c\x11\x8d\x72\x92\x4a\xb8\xab\xa6\x01\xf1\x48\xc2\x47\xbe\x1a\x8f\xa4\xf8\xd2\xeb\x75\x3e\x75\x8e\x1b\x25\xaa\x25\x23\xb3\xcb\x06\x18\xb4\x3a\x37\x09\x16\x17\x22\x98\xec\xee\xfc\xe0\x21\xc5\x97\x38\x4b\x15\x86\xc1\xe7\xc3\x5e\xd0\x18\x0c\x49\x74\x47\x46\x66\x34\x08\x83\xe6\x9e\x6d\xee\xd9\xa0\x84\xbb\xc7\x89\x1c\xb1\xf8\x8c\xf4\x49\xa9\xa8\x3a\x56\xb3\x35\xca\xfb\x4a\x26\x7f\xcb\xf4\x79\x58\x27\xc3\x3c\x6a\xe7\xac\xbb\x74\x88\xfb\x06\x63\xc2\xc5\x70\x17\xab\x04\x79\x31\x4a\x3d\xf0\x3c\xec\xc1\xe1\xc9\x61\xef\x70\x05\xe4\x03\x54\xe8\x90\xa7\x1c\x75\xb3\x09\x3d\xb4\xe4\xa5\x9e\x4c\x44\x97\x4c\x9e\x90\x38\xeb\x7f\xc5\x84\xc4\x69\x3c\xc4\xe9\x14\xc6\xb1\x92\x1c\x8e\x05\xba\x42\x30\x9c\x84\x38\x8e\x15\xe8\x01\xc4\xf0\xc4\x97\x1c\xb4\xc1\x44\x9b\x14\x06\x46\x0f\x61\x96\x45\x45\xfe\xbd\xc8\x1a\x12\x7c\x24\xb4\x24\xb3\x4b\xd1\x8b\x26\x1c\x2c\x67\x74\xda\x87\x56\x1b\x4e\xf1\xe6\x4f\x9d\x7c\xfb\xd4\x39\x3e\x1b\xa1\x89\x49\x9b\xd0\x6f\x02\x27\x6c\xab\x5d\x92\x71\xa1\xf8\xea\x69\x40\xda\x67\x39\xc9\x20\xce\xee\x70\xa9\xce\x50\xf9\xad\x4f\xf8\x30\x93\xca\xe3\x34\x9b\x70\x5e\x54\x08\xb8\x1d\xb0\x70\x23\xe9\x0a\x8a\x42\xb9\x34\x3a\x1f\x09\xde\x9d\xe2\xa6\x90\x71\x9d\xc0\x0f\x94\x0f\x26\x13\xd2\x27\xfa\x06\x0d\x2c\x58\x62\xb1\xce\x20\x9a\x2d\x0d\x15\x0e\x1b\x80\xc6\x70\x7c\x4a\xc7\xe9\xef\xdd\xb3\xd3\x23\x6d\xc2\xc9\x44\xbd\x00\xe2\xf3\x90\xef\x2f\x0a\x5f\x0e\x1c\xd0\x8f\x6d\xc8\xa4\xe2\x7a\x84\xe2\x1f\x4b\x6a\xc5\x51\x2c\x15\xa6\x61\xd0\xbd\xd2\xb9\x4a\xe1\x2a\x1e\x23\xd8\x3c\x49\xd0\xda\x41\xae\xd4\x9d\xa3\xc7\x14\x18\xb1\x05\xcb\xf0\x43\x0b\xf6\x7e\xba\x16\x81\x5b\x48\x11\xcc\xd4\xff\xf0\xd4\x9d\xd8\xda\xcd\x50\x8b\x7b\x29\x13\xba\x65\x11\x13\x9d\x11\xde\x92\x4b\x83\x05\x32\xb7\x21\xed\x17\x25\x1c\x26\x74\xdb\x70\x1f\xad\x49\x40\x1b\x8f\x31\x7d\xaa\x38\x66\x85\xb1\xb2\x56\x55\x58\x1e\xc8\x62\xf0\xba\x4c\x30\x2e\x00\x16\xe6\x1c\xaf\x73\xb4\x54\xb8\x2a\x7c\xe7\x2b\x95\x72\xb8\x4c\xfa\xa8\x01\xbe\x86\xd6\xa1\x61\xe2\xb6\x26\xe5\xb0\x39\xc4\x8d\xab\xb9\x1c\xdf\x23\x5d\xed\x4c\x52\xa6\xf2\xb2\xf2\x3d\x68\xee\xf3\x8e\x1d\x42\x74\xd1\x8c\x91\x1b\x69\x68\xd0\xb2\x37\x5f\x97\x9f\xcb\x01\xe3\x88\x7d\x9d\x22\x4b\xe6\xf6\xa7\x4b\x31\xe5\xf6\xec\x8f\x6a\xe2\x19\x4c\x50\x72\x42\x58\xf7\x35\x48\x18\x6a\xaf\xf0\x5f\x83\x76\xa4\x33\x8b\xd0\xcf\x09\x2e\x35\xc1\x5e\x2a\x82\xc6\x23\x96\x46\x19\x40\x55\xf9\x2a\x31\xf2\x96\x3c\xe2\x99\x5f\xf2\x6f\x3a\xbd\x13\x27\x98\x85\x11\xb4\xdb\xf0\xf3\x2b\x32\xa5\x8c\xe3\x7e\x95\x8c\x19\xbc\x2a\x0d\x9e\x01\x9b\xeb\x99\xaf\x69\x98\x4a\x55\x6e\x99\xf1\x13\x4d\xb3\x6a\xc7\xfc\x0f\xf7\x4b\xff\xd8\x59\x37\xcd\xba\x69\x6e\x6d\xd3\x9c\x3b\x59\xb0\x8c\xa2\xe3\x1e\xe0\x8f\x0f\xea\x36\x5a\xb7\xd1\x2d\x69\xa3\x4f\x64\x87\x77\x98\xb9\x4e\xea\x32\x4b\xea\xac\xf2\xc9\xd3\xf5\xa0\x85\x6d\xf4\x59\xda\xf7\x75\xf6\x5c\x5b\x2f\x1d\xc7\xc6\xed\x11\xf4\xef\x88\xf3\x29\x1f\x0c\xd0\xf8\x8f\xdc\xd6\xfd\x65\x24\x61\xd7\xcd\x78\x96\x6d\xaf\x15\xac\xd4\xcf\x5f\xd6\x70\x00\xf9\xc0\xc1\xd6\xde\xb9\x56\xef\xdc\x2f\xe2\x7a\x03\x03\x2d\xa8\xde\xc6\x45\x0b\xb2\xff\xb5\x95\xfa\x59\xe2\x9c\x95\xe6\xfe\xe2\xc6\x8c\xd4\x93\x6e\xe5\x91\xa4\xb6\xd1\xda\x46\x6b\x1b\x7d\x5f\x36\xfa\xc2\x30\xa1\x5c\x4c\x51\xb6\xd1\x26\x26\x06\x6b\x9c\x01\x3c\x58\xd3\x64\x02\x26\xce\xd2\x23\x89\x2a\x9d\x95\x3e\x04\xbc\xd2\x00\x82\xaf\x56\x67\x01\x04\xf7\xef\x8d\x60\x3a\x7d\x64\x63\xf9\x9c\x89\x3d\x5a\x76\xab\x0d\x0c\xc0\x45\x72\x98\x71\x9a\x98\xf0\x43\x3f\x8f\x84\xff\x25\x74\x83\x81\x5f\x57\x13\x08\x1d\xd4\x93\xa7\xf5\xd5\x45\x7b\x81\x60\xd1\x1c\x60\x91\xe9\x5e\x6c\x6a\x0c\xc0\x82\x6e\xa1\x07\x6f\xce\x82\x4f\xf5\xbe\xce\x08\x33\x7a\x0b\x13\x2e\xc9\xde\xc6\x86\x4b\xba\x6a\x0f\x86\xfe\x55\xf0\x77\xd3\xea\xa1\x5e\xfa\xe5\xee\x32\x4f\x86\x9e\x75\xeb\x9e\x0c\xeb\x71\x75\x3d\xae\xfe\xd7\xc7\xd5\xb3\xbf\x1e\xa9\x27\xd6\xef\xe2\xb8\xb0\x45\xbd\xea\x9f\x00\x00\x00\xff\xff\xbd\x26\x5e\x56\xef\x26\x00\x00"),
          path: "http-api-test.tml",
          root: "http-api-test.tml",
        },
      
        "http-api.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x4b\x6f\xdb\xc0\x11\x3e\xcb\x80\xff\xc3\x84\x87\x80\x0c\x18\x0a\xbd\x32\xf0\xc1\x8e\x15\xc7\x4d\x22\x1b\xb6\xdc\xa2\x28\x8a\x64\x4d\x8e\xa4\x8d\xa9\x5d\x66\xb9\x92\xa3\x0a\xfa\xef\xc5\xbe\xf8\x50\xf5\x74\x6c\xb9\x71\x93\x83\x19\xed\x63\x76\x66\xbe\xd9\x6f\x66\x97\x6c\xb7\xe1\x84\x24\x77\xc8\x52\x48\xb1\x4f\x19\x16\x40\x18\x50\x26\x51\xf4\x49\x82\x70\x3f\xa4\xc9\x10\x48\x96\xf1\xfb\x02\xe4\x10\xe1\x63\xaf\x77\x79\x7c\x79\x0e\x92\x43\x4a\x27\x28\xa4\x6e\xed\x53\x46\x32\xe0\x39\x0a\x22\x29\x67\xc0\xfb\x87\x07\xed\xb6\xee\x1a\xd0\x09\x32\x78\x7f\x75\x73\x0a\x02\x7f\x8c\xb1\x90\xd0\xe7\x42\x77\xcd\x66\x3f\xc6\x5c\x22\x44\xd7\x52\x8c\x13\x19\x5d\xdc\x7e\xc7\x44\x46\x5d\x32\xc2\xf9\x1c\xe4\x34\xc7\x08\x7a\x43\x5a\x00\x2d\x20\x17\x7c\x42\x53\x4c\xe1\x76\xaa\xe7\x8e\x0b\x14\xd1\xe1\x81\x1a\x54\x5a\x50\xaa\x3d\x3b\x3c\x68\xb5\x4e\x31\x43\x89\x7e\xc2\x99\xc4\x9f\x32\x7a\x6f\x9e\x21\x14\x52\x50\x36\x08\x00\x85\xe0\x42\x0d\x3c\x43\xb9\x7a\x94\x3f\x9b\x39\xf5\x2e\x49\x72\x47\x06\x38\x9f\x47\x55\x5b\x43\xe5\xd0\xc8\x0c\x94\xd0\x9b\x3c\x25\xab\x57\x0f\x61\x36\x8b\xcc\x90\xe3\x44\x79\xac\x29\xbc\xd1\xd3\x58\xa2\xa9\xf6\x71\x96\xad\x5e\xc1\x3d\x29\x93\xfa\x4f\x00\xfe\x3f\xff\xb5\x93\x35\x7a\x66\x65\xd2\x7b\x81\x4b\x4d\x9a\xcd\x22\xd3\xb5\xcc\x94\x46\xcf\x82\x29\x0f\xf3\xed\xfc\xf0\x40\x07\xd7\x8a\x81\x57\x98\x70\x91\x16\x55\x38\xeb\x40\x52\xf1\x2a\x30\x17\x58\x20\x33\x21\x2b\xb0\xc8\x39\x2b\x5c\x80\x4a\x0e\xa4\x1e\xa0\x7a\x09\x92\x65\x20\xac\x3c\xde\xd7\xd3\xb4\xb0\x1d\xf4\x76\x31\xba\x41\xdb\x42\xf7\x81\x0a\x5c\xb8\x24\x03\x54\xbe\x87\x6f\xdf\x0b\xce\x62\x2f\x27\x03\xf4\xbe\xa9\x9e\x2b\xab\xf3\x25\x8a\xc5\x41\xa2\xd9\x65\xc6\xf7\xb8\x24\x99\x5b\xa2\x36\x58\xaa\xf6\xaf\xd6\x32\x27\xda\x8c\xda\x29\x44\xaa\xc5\x4b\x49\x0e\x1d\xc7\x13\x15\x0c\xd6\x44\xc3\x28\x43\x9e\xa5\x86\x50\x86\x52\xe6\x40\x72\x0a\x43\xc2\xd2\x0c\x45\xa1\xe9\xc1\x6c\x77\xca\x06\x9a\x39\xb4\xc4\x92\x5d\x8a\x92\x40\x4a\x52\xd8\x82\x49\x2c\x0e\x4e\x2f\xa3\x8d\x26\x0a\x23\x98\x0b\xc7\x23\xaa\x6d\x84\x52\xd0\xa4\x00\xfb\x8c\xbe\x98\x67\x65\x5f\x17\xef\x41\xa0\x1c\x0b\xa6\x6c\x63\x78\x5f\x4a\xa6\xac\x90\x84\x25\x8a\xa2\x94\xfe\x0d\x3d\xcb\xa5\x88\x5a\xa6\xdd\xb6\xf2\xa3\xc3\x83\xfe\x98\x25\x4a\xa8\x3f\x5a\x5c\x33\x84\x45\x05\x03\x78\xe3\x16\xd3\x06\x18\x3d\xe0\xb5\x6d\xd4\x6d\x95\x59\x71\x39\x3f\x34\x1d\x56\x7e\x0c\x23\xdd\x30\xaf\x8c\x32\x9b\x55\x85\x3c\xd2\x89\x49\x05\x1a\x1e\xb7\x2f\x24\x87\xc4\x0c\x31\x26\xaf\x75\x7b\xa4\x44\x6a\xb1\x57\x7c\x2c\x31\x86\xf6\x4c\xff\x67\xde\x8e\xf3\xf1\x6d\x46\x93\xaf\xd4\xf8\xe0\x0b\xca\x21\x4f\x63\xb8\xbc\xb8\xee\xe9\x86\x93\x8b\xd3\x7f\xc4\xf0\xd7\xeb\x8b\xae\x11\xa1\x7d\xe3\xab\x18\x71\x76\x07\xe0\xc8\x48\xfe\x84\x37\x4a\xc7\xb1\xa4\x99\xa3\x24\x4b\x92\xda\x39\x23\x88\x8f\x4a\x8f\x76\xf1\xbe\x27\x48\x82\xbe\xe2\xb3\x14\xfb\x28\x54\xe4\x45\xae\xbb\x33\xa2\xd2\x77\x3f\xce\x59\x9f\xfb\x9e\x5d\xcf\xd2\x98\x17\x84\xae\xfb\xef\x54\x0e\x8d\xac\x51\xd4\x61\xa9\x1f\x04\x81\x72\x62\xab\x95\xc8\x9f\xd1\x47\x24\x29\x0a\x3f\x88\xae\x51\xfa\x9e\xd6\x8a\xc9\xb7\xbd\x69\x8e\x5e\x08\x1e\xc9\xf3\x8c\x26\x3a\x94\xdb\x6a\xff\x78\x76\xe6\x06\x55\x4a\x70\x0c\x16\x16\xa4\x74\x41\xa7\x0f\x14\xb3\xb4\x28\xa7\xea\x9f\x36\x20\xbc\xb1\xc8\xbc\x18\x94\x82\x57\x46\x88\x1f\x44\x37\x57\x9f\x15\x7a\x94\x0d\xfc\xc0\x84\x83\x33\x64\x42\x04\x50\x96\xf0\x91\x8a\xe2\x07\x72\xbc\x91\x44\xfb\x0a\x10\x05\x84\x32\x57\xa1\x70\x8a\x09\x57\x1e\x52\xba\x9c\xf0\x74\xea\x07\x41\x64\xda\xfc\xd7\x6e\xcd\xe0\x9d\x9e\xf5\xea\x08\x18\xcd\xc0\xda\xb0\xd2\x47\x1d\x85\x78\xdf\xf7\x3e\x10\x9a\x61\xaa\x22\x35\x27\xa2\x40\xf5\x97\x8c\x54\x24\xa7\x30\x16\x59\xf4\x37\x92\x8d\xb1\xd8\xde\x67\xad\x96\xa7\x63\xc9\x8b\x95\x32\x61\xd9\xb8\x95\x2b\x6b\xce\x2c\x37\x29\x0a\x61\x37\xdd\x16\x90\xab\x2d\xf0\x10\xa0\x53\x22\x89\x17\x97\xe8\x85\x0f\xc2\xdf\x65\x94\xd0\x81\xa7\x94\x75\x54\x12\x55\xfb\x2f\x84\x0a\xb1\x1a\xda\x0f\xc6\x2d\x29\x49\x88\x8b\x1d\x8c\x7e\x5e\xa4\x5c\x66\x86\x53\xcc\x54\x59\xbc\x03\x5c\x56\x43\xf3\x6f\x93\x9e\x5e\x21\x89\x1c\x17\x5e\xac\x89\x39\xba\xd6\xbf\x0c\x16\x69\x13\xbe\x6a\xd3\x29\x99\x2a\x92\xfc\x25\x53\xca\x32\xe8\x57\x77\x5b\x6a\xec\x2e\xe5\xed\x17\xb8\x95\xb0\xd9\x46\x46\xb3\x2a\xcb\x99\xea\xfa\xd9\xb2\xdc\xcd\xf6\x49\xce\x1d\x22\xf6\x94\xe4\xcc\x72\xcf\x9a\xe4\x4a\x6c\xf6\x92\xe4\x0e\x0f\x5a\x06\xa4\xf3\xd3\x10\xf8\x9d\xdb\x2c\x27\x64\xe0\x07\xd1\x19\x4a\x3b\xc7\x2b\x91\x54\x56\xa8\x9d\xf5\x8a\xdf\x99\x3d\xb2\x71\x87\x74\x39\x94\xb3\xab\x3a\x90\x32\x9b\x98\x76\x65\x89\xed\xc9\xdb\x6d\x06\x2e\x74\x48\x38\x23\xce\x53\xb3\x32\x4a\x14\xc0\xb8\x3a\xeb\x8c\x99\xb1\x6b\x6e\x5d\xf2\x5f\x99\xff\x21\x07\xd5\x47\xce\xfc\x3b\x31\x91\x92\x56\x86\xd0\x2d\x4f\xa7\xdb\x7b\xd9\x31\x91\xfa\x87\x42\x18\xf1\x25\xd7\xb4\x5a\xb5\x50\x88\xa1\x8c\x9d\xff\x83\xb2\x60\x9d\xe9\x4b\x72\x4e\xa3\x56\xa8\x68\x2c\xac\x26\xc2\x6f\x51\xe7\xed\x03\xee\x27\x2b\x2d\x76\xa9\x2c\x56\x5b\xba\xb4\xe4\xe8\x72\x4b\xf8\x6a\xc8\x22\xeb\xa8\xa5\xca\x01\xfe\xb2\x59\xb5\x6b\x1c\x73\x4d\xf7\x5c\xd9\xf8\xb4\xf3\xb9\xd3\xeb\xac\xce\xc0\xee\x12\x71\x4f\x19\xd8\x2c\xb7\x4d\x06\xde\x20\xb0\xf4\xea\x7e\x0e\x8b\x2f\x3b\x8b\xf6\x47\x72\x7b\x4d\x5c\x22\x7d\x32\x16\x7f\x72\xba\xae\x62\xbe\xa2\xeb\x47\x38\x1e\xa8\x78\xdc\xe5\x6e\xf1\xb1\x0e\x80\x7f\x28\xfc\xa9\x29\xfc\x0c\xe5\x73\xf1\xf7\x59\xc7\x9c\xa6\xae\x3a\xd7\x97\x17\xdd\xeb\xce\xdb\xfa\xb1\x6a\x19\xa1\xeb\x97\x3d\x7b\x62\xf3\x33\x94\xcf\x7a\x98\x32\xb8\xfc\xc9\x00\x4f\x71\x8e\xd2\x6a\xac\x3b\x48\xa9\xb9\x5a\x3e\xa6\xcb\x6f\xd0\x6c\x24\xd6\x38\xf6\x31\x6e\xcf\x06\x28\x5f\x2c\xcb\x6e\xb8\xd3\xba\xf8\x14\x42\xe9\xf3\x5f\x4d\x58\xca\x8f\x05\x0a\x4a\x32\xfa\x6f\xfd\x82\x69\x57\x97\x9a\x37\x8e\x96\xf7\xef\x05\x95\x28\x7e\x0f\x2f\xff\x8e\xb9\xec\xe2\xd3\xb2\x24\xd6\xb8\xf5\x33\xaf\xcb\xd7\xe6\x29\x3b\x8d\x64\xd9\x86\x17\x8a\xf6\x7d\xe7\xea\x6c\xf5\xcb\x39\x4a\xbf\xd9\xdf\x5f\x9a\x3a\xce\xb2\xe7\xce\x54\x06\x9c\xfd\x24\xab\x09\x11\xc0\x45\x8a\x22\x34\x8f\x93\xa9\xfd\x5a\x42\xf7\xd2\x3e\xf0\x74\x69\x1e\xf3\x3d\x3d\xdc\x0b\xde\x81\x4b\x5c\x6a\xb0\x48\x85\x1b\xce\xd3\xc8\xb7\x9f\x8e\x54\x63\x5a\x7a\x16\x1c\xe9\x91\x5a\x0f\xc0\xac\xc0\x85\x4e\x8f\x14\x89\x67\xb7\xa1\xdd\x8a\x1b\x35\x39\x99\x3e\x4c\x97\x93\xe9\x5a\x6d\x74\x77\x6d\x0b\x36\xb5\x52\xde\x53\xdc\xea\xbe\x44\x51\xbf\x73\x32\xc0\x2e\xaf\x5e\x27\xd4\xbe\x50\x70\x96\x88\x3c\x5f\x5b\x1c\x2c\x7e\xc1\x50\x53\x7a\xa1\xcb\xe4\xd3\x23\x85\x59\xc2\xd9\x24\x3a\x96\x9c\xfa\x22\xcf\x57\x26\xd0\x1d\x78\x5f\xa8\x1e\x9c\x54\xdf\x87\x08\x67\x0a\x1b\x8f\x6e\x51\x40\x8a\x92\xd0\x6c\x87\xab\xa5\xc5\x3b\xc5\xe6\xb5\xdb\x76\xaf\x7d\xec\x4b\x0e\x8d\x81\x02\x6b\x99\x57\xe0\x08\xde\xfe\xa5\x1e\x3a\xf9\x60\x7d\x31\xb6\xe0\x64\x07\xe1\x12\xdf\xe6\x83\x47\x75\x6d\xfe\xbf\xe6\xce\xba\x03\x9a\x6e\xac\x17\x71\xfa\xab\x99\x95\xb5\x9c\x65\xec\x70\x81\x58\xc2\x55\x5b\xe3\xd1\xaa\x3d\x93\xae\xf6\x5f\xf1\xed\xab\xa6\x5b\xff\xe5\x94\x55\x52\x79\x34\x76\xae\x36\x4d\x76\x40\x5c\xd5\x84\xb6\xa3\xfe\x55\x54\x6c\x51\x75\x53\x1a\x10\xc5\x8b\x98\xd9\x24\xf2\x22\x4b\xcb\x97\x54\x3c\xee\x5e\x22\xfe\x27\x00\x00\xff\xff\xbe\x3e\x89\xf3\x08\x2b\x00\x00"),
          path: "http-api.tml",
          root: "http-api.tml",
        },
      
    
  }
)

//==============================================================================

// FilesFor returns all files that use the provided extension, returning a
// empty/nil slice if none is found.
func FilesFor(ext string) []string {
  return assets[ext]
}

// MustFindFile calls FindFile to retrieve file reader with path else panics.
func MustFindFile(path string, doGzip bool) (io.Reader, int64) {
  reader, size, err := FindFile(path, doGzip)
  if err != nil {
    panic(err)
  }

  return reader, size
}

// FindDecompressedGzippedFile returns a io.Reader by seeking the giving file path if it exists.
// It returns an uncompressed file.
func FindDecompressedGzippedFile(path string) (io.Reader, int64, error){
	return FindFile(path, true)
}

// MustFindDecompressedGzippedFile panics if error occured, uses FindUnGzippedFile underneath.
func MustFindDecompressedGzippedFile(path string) (io.Reader, int64){
	reader, size, err := FindDecompressedGzippedFile(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindGzippedFile returns a io.Reader by seeking the giving file path if it exists.
// It returns an uncompressed file.
func FindGzippedFile(path string) (io.Reader, int64, error){
	return FindFile(path, false)
}

// MustFindGzippedFile panics if error occured, uses FindUnGzippedFile underneath.
func MustFindGzippedFile(path string) (io.Reader, int64){
	reader, size, err := FindGzippedFile(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindFile returns a io.Reader by seeking the giving file path if it exists.
func FindFile(path string, doGzip bool) (io.Reader, int64, error){
	reader, size, err := FindFileReader(path)
	if err != nil {
		return nil, size, err
	}

	if !doGzip {
		return reader, size, nil
	}

  gzr, err := gzip.NewReader(reader)
	return gzr, size, err
}

// MustFindFileReader returns bytes.Reader for path else panics.
func MustFindFileReader(path string) (*bytes.Reader, int64){
	reader, size, err := FindFileReader(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindFileReader returns a io.Reader by seeking the giving file path if it exists.
func FindFileReader(path string) (*bytes.Reader, int64, error){
  item, ok := assetFiles[path]
  if !ok {
    return nil,0, fmt.Errorf("File %q not found in file system", path)
  }

  return bytes.NewReader(item.data), int64(len(item.data)), nil
}

// MustReadFile calls ReadFile to retrieve file content with path else panics.
func MustReadFile(path string, doGzip bool) string {
  body, err := ReadFile(path, doGzip)
  if err != nil {
    panic(err)
  }

  return body
}

// ReadFile attempts to return the underline data associated with the given path
// if it exists else returns an error.
func ReadFile(path string, doGzip bool) (string, error){
  body, err := ReadFileByte(path, doGzip)
  return string(body), err
}

// MustReadFileByte calls ReadFile to retrieve file content with path else panics.
func MustReadFileByte(path string, doGzip bool) []byte {
  body, err := ReadFileByte(path, doGzip)
  if err != nil {
    panic(err)
  }

  return body
}

// ReadFileByte attempts to return the underline data associated with the given path
// if it exists else returns an error.
func ReadFileByte(path string, doGzip bool) ([]byte, error){
  reader, _, err := FindFile(path, doGzip)
  if err != nil {
    return nil, err
  }

  if closer, ok := reader.(io.Closer); ok {
    defer closer.Close()
  }

  var bu bytes.Buffer

  _, err = io.Copy(&bu, reader);
  if err != nil && err != io.EOF {
   return nil, fmt.Errorf("File %q failed to be read: %+q", path, err)
  }

  return bu.Bytes(), nil
}

package static


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
)

type fileData struct{
  path string
  root string
  data []byte
}

var (
  assets = map[string][]string{
    
      ".tml": []string{  // all .tml assets.
        
          "http-api-json.tml",
        
          "http-api-mock.tml",
        
          "http-api-readme.tml",
        
          "http-api-test.tml",
        
          "http-api.tml",
        
      },
    
  }

  assetFiles = map[string]fileData{
    
      
        "http-api-json.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x94\x4f\x6b\xbb\x30\x18\xc7\xcf\x06\xf2\x1e\x9e\x9f\x87\x1f\x0a\x25\xde\x37\x7a\x18\xbb\x8d\xd1\x8e\x95\x9e\xc6\xa0\x69\xfa\xd8\xd9\xd5\xa4\xc4\xb8\x3f\x48\xde\xfb\x88\x76\x4c\x3b\x9d\x56\x7a\xe9\xa1\x8f\xf9\x7c\xbf\xe6\xf3\x20\x25\x51\x04\xbb\x4c\x49\x88\x93\x0f\x93\x6b\xcc\x80\x31\x46\xc9\x1b\xd7\x10\x50\x02\x45\xc1\x16\x46\xe7\xc2\xb0\xf9\x7a\x87\xc2\xb0\x19\x4f\xb1\xfc\xb1\xf6\x6e\x31\x9f\xc1\x14\x56\x45\x01\x29\x3f\x3c\x72\xb9\x51\x69\xf9\xdf\xf1\x08\xf8\x0e\xec\x83\xef\x83\xb5\x2b\x4a\x7a\x70\xb7\x1a\xb9\xc1\x6e\x68\x35\xbf\x11\x26\x51\xf2\x4c\xf4\xf2\xb0\xf9\x13\x5d\xcd\xdb\xd1\xa1\xa3\x47\x11\xdc\x2b\xbe\xa9\x55\xd4\x68\x72\x2d\x33\xe0\x20\xf1\x1d\x12\x99\x19\x2e\x05\x82\x8a\x81\xbb\x2a\xf5\xb2\xec\x81\x8b\x57\xbe\x45\x6b\xd9\xe9\xa4\x56\xd5\x5a\x46\x49\x9c\x4b\x71\x92\x14\x08\x25\x0d\x4a\x03\x99\xd1\x89\xdc\x86\x10\x8c\xc4\x4f\x00\xb5\x56\x3a\x84\x82\x12\xcf\xf9\xc5\x3d\xa6\x63\xbb\xba\x4b\xf1\x92\xd8\x21\xe1\x6a\x5a\x6e\x10\x5b\xca\x94\xeb\xec\x85\xef\x83\xa7\xe7\xf5\xa7\xc1\xef\xe6\xe1\x04\xfe\xbb\xac\xf0\xba\x7c\xfc\xdf\x14\x64\xb2\x2f\x5b\x78\xd5\x2d\x8e\x2d\x51\x54\xef\x44\x89\x57\xf5\x39\xd2\x5c\xd6\xc4\x65\x50\x62\x6b\xf2\x6a\x4b\xd0\x23\xaf\xbe\x0e\xcd\x2e\x8d\x49\xa7\xbc\x9f\xa4\x56\x79\x63\xf0\x9d\xf2\xc6\xc0\x2e\x2e\x6f\x4c\x89\xf3\xe4\xf5\x7e\x87\x7a\x94\x1e\x0f\x37\xba\xfd\x06\x36\x35\xf6\x65\xb6\xca\x1d\x1a\xd4\x29\x74\x28\xe0\xe2\x12\x87\x06\x0f\x12\xf7\x15\x00\x00\xff\xff\xbe\xed\x0a\x8b\x58\x06\x00\x00"),
          path: "http-api-json.tml",
          root: "http-api-json.tml",
        },
      
        "http-api-mock.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x97\xcf\x6f\xdb\x36\x14\xc7\xef\x06\xfc\x3f\xbc\x04\xd8\x20\x15\x82\x7c\x4f\x91\x43\xd6\x14\x43\x80\x35\x09\x9a\xf5\x34\x0c\x03\x2d\x3e\x59\x5c\x24\x52\x25\x29\x39\x81\xe0\xff\x7d\xe0\x2f\x59\x96\x1c\xa7\x4a\x7b\x58\x2f\x71\x2c\x92\xef\xc7\xf7\x7d\xde\xa3\xb5\x5a\xc1\x27\x91\x3d\x5e\xdd\xdf\xdc\xd5\x28\x89\x16\x12\x28\xe6\x8c\xa3\x02\xc2\x41\x69\xd9\x64\xba\x91\x08\xdb\x82\x65\x05\xb0\xaa\x2e\xb1\x42\xae\x15\xe8\x02\x61\x78\x2a\x17\x12\x6a\x29\x5a\x46\x19\xdf\xc0\x72\xb1\x5a\x01\x81\x4a\x64\x8f\xd0\x28\xb2\x41\x60\x1c\x34\x2a\xad\xec\xc6\x46\x21\x6c\x99\x2e\xac\x95\xae\xfb\xda\x08\x8d\x90\x3e\x58\x6f\xe9\xdd\xfa\x5f\xcc\x74\x7a\x4b\x2a\xdc\xed\xa0\xd0\xba\x36\x8e\xd2\xe5\x42\x3f\xd7\x38\x89\xd6\x85\xd8\x2d\x17\x00\x00\x4a\x0b\x89\xf0\x4e\x3d\xf3\xac\x22\x75\xfa\x89\xd4\xcb\xc5\x6e\xb9\xb0\xd1\xdc\xe2\x76\x7c\x56\xa2\x6e\x24\x57\x40\x80\xe3\x16\x18\x57\x9a\xf0\x0c\x41\xe4\x40\xc6\x7e\xd2\xe5\x22\x6f\x78\x76\xc4\x4a\x14\xc3\xbb\xb1\x61\x1f\x8e\xb3\x0f\xbf\x8e\x96\xfd\x6a\x1f\xf0\x85\x71\x1f\x0d\x82\x8e\x13\xb7\x63\xb7\x8f\xfe\x1a\x4b\xd4\xe8\x15\x46\x27\xbf\xb0\xf6\x98\xe0\xa0\x05\x48\xac\x44\x8b\x40\x60\xc3\x5a\x53\x01\x89\x99\x90\x14\x18\x45\xae\x59\xce\x90\xc2\xfa\x19\x6e\xae\x43\x1e\x51\x35\x89\x3a\xf6\x4e\xa2\x4c\x3f\x41\x26\xb8\xc6\x27\x9d\x7e\x70\x9f\x09\xd4\xcd\xba\x64\xd9\xcd\xb5\x11\x9c\xf1\x4d\x0c\x28\xe5\x3e\x53\x96\xc3\x3f\x09\x14\x44\xc1\xc5\x25\x54\xa9\x4d\x2b\xfd\x43\x10\x1a\x85\x73\xf1\x7b\x38\x33\xeb\x83\xe4\xbd\x3c\x79\xa5\xd3\x8f\xc6\x58\x1e\x9d\x7f\x76\x51\x53\x81\x0a\xb8\xd0\x80\x4f\xcc\x30\x63\x59\x61\x14\x7e\xf9\x7a\xbe\x8f\x24\xee\x45\x72\xff\x04\xb7\x3e\x8b\xd1\x36\xef\x8c\xb3\x72\x2f\xea\xef\xa8\xaf\xca\x72\x80\x81\x2a\x99\xaf\x7f\x59\x02\x69\x09\x2b\xc9\xba\xc4\xa0\xa5\xc8\xc1\x22\xd8\x75\x01\xd5\x7b\x92\x3d\x92\x0d\xee\x76\xe9\xfe\xd9\x01\xbe\x27\xe5\x76\xee\x8f\xcb\x2d\x24\x45\xe9\xb5\xf6\xdf\x7e\x7b\xee\xbf\xd7\xae\xa3\x74\x02\x12\x55\x2d\xb8\x42\x79\x8f\xf2\xde\x3f\x8d\x21\xfa\xeb\xef\x19\x41\x26\xce\x94\x2d\x68\x1c\x0a\xd4\x12\xe9\xf3\x56\x30\xcb\xda\xb8\x1c\x9f\x09\xdf\x60\x64\x54\x88\x1e\x13\x68\x8d\x2f\x94\x39\xc9\xb0\xdb\xc5\xb0\x16\xa2\x1c\x22\xc1\x72\xc0\x12\xab\x04\xc4\xa3\x21\xa9\x4d\xa3\x19\x9e\xe3\xf7\xe6\xd8\xc0\x9a\xab\xbb\xcb\xe1\x12\x48\x5d\x23\xa7\x91\x7f\x90\x58\x47\xf1\x7e\x73\x1f\xf8\x80\x16\x2d\x1b\xf4\x94\xc5\x61\xd9\x2f\xf5\x66\x4a\xe4\xc1\x66\x9c\x4c\xf8\x32\xdb\x25\xc3\xd6\xcc\xd3\xc0\xd1\x9a\x28\xa4\x60\xda\xb6\xe8\x3b\x9a\xf6\x58\xbf\x86\xcc\x37\xb6\xe7\x1c\xe1\x42\xed\xbd\x74\xae\x02\xb9\x68\x38\x7d\xb9\x9d\xfb\xbe\x3f\xb3\x1b\xa7\x6d\x3d\xc3\x7f\xb7\x4b\x7e\xd8\x14\x90\x1f\x07\xfc\x98\x4c\xe6\x21\xb4\x4f\xeb\x10\xa5\xb7\x25\x65\x65\x55\xe9\x2d\x6e\xa7\x49\x55\x44\x67\x85\x1d\x28\xe7\x93\x1c\x3c\x62\x2e\x95\x03\xa4\xbe\xd4\x94\x68\x84\xc6\x7e\xa8\xc9\xb8\xef\x2f\xd5\x0d\x6b\x91\xdb\x6b\xad\x25\x65\x83\x27\xa1\x72\x36\xbf\x89\x2b\xd7\x35\x46\x06\x77\xe8\x2a\x33\xf7\xcf\xa1\x18\x07\x2b\x87\xea\x3a\x41\xba\xe5\xa2\xeb\x8c\xc6\x7e\xeb\x8d\x7a\x60\x15\x2b\x89\x04\x33\x3d\x86\xb3\xe3\xc1\xfc\xed\x99\x3b\x68\xd9\xe1\x3c\xef\x3a\xc0\x52\x61\x7f\x9c\x8b\xed\x90\x82\xe3\x00\xcf\xe3\x02\x5e\x01\x63\x58\xe9\x5b\xa1\x5d\xf7\xac\x18\x6f\x49\xc9\xe8\xb8\xca\xe6\xc3\x47\x8a\x3e\x52\x94\xd2\x84\xea\xea\xfa\x42\x10\xa6\x42\xc9\x3e\xb9\x81\x18\x66\x6c\x4a\x09\x67\x97\x46\x8f\xe3\xd1\xbd\x70\x59\x3a\x85\x7d\x18\xe9\x7d\xaf\xb4\x7f\x32\x9e\x7a\xbd\xdc\x9c\x5a\xb5\x03\x96\x1f\x24\x1a\x2c\x09\xa5\xe1\xd7\x54\xf8\xfd\xc1\xb5\x08\x40\x0e\x38\x75\xce\x4f\x41\xe9\x2c\x1e\x87\x32\x30\xe8\xf6\x1c\x63\xf0\x60\x65\x54\xc9\x37\x4e\x46\x8f\xac\xb3\xfc\x1a\xb2\x78\xa8\xe6\x94\x5b\xdc\xb7\xf6\x84\xde\x11\x13\x99\xf5\x78\x92\x89\x19\x28\xcc\x9f\x60\x3f\x88\x9c\x90\xd5\x51\x84\x9c\xb8\x91\x99\x8b\xe3\xa1\x10\xdb\x5d\xab\xd5\xe9\xde\x18\x4c\x44\x7c\x62\xda\xa0\x36\x23\xd3\x17\xc6\xa7\xb3\x09\x4c\x63\x15\x58\xfd\xf2\x5a\x83\x4e\x69\xf5\xb6\x67\x51\xe7\x3c\xcb\xb7\x0f\xda\xef\xb8\xfe\xdd\xdf\xd5\x0a\xfe\xbc\xbb\xbe\x8b\x28\xb6\x58\x9a\x37\x8d\xf8\xa2\x5f\xb8\x6b\x51\x4a\x46\x11\x8c\x24\xf6\x05\xc4\x26\xcd\xc3\x1d\xbd\x2d\x88\x06\x55\x88\xa6\xa4\x50\xd8\x9f\x5d\xe9\x88\x86\xef\xb8\x47\xcd\x74\xbd\x09\xef\xa1\x48\xcd\x58\xdd\x19\x80\x90\xd3\xdd\x84\xa5\x51\xb7\xf6\x2c\x9d\xec\x29\xbf\x1a\x26\xd9\x1b\x38\xca\xa5\xa8\x06\x1c\x39\x7b\xf6\x16\x08\x1c\xbd\xda\xd4\xff\x87\xa9\x67\xc6\xc7\xcf\x4c\xc3\x7f\x01\x00\x00\xff\xff\x61\x8c\x96\xc7\xdd\x10\x00\x00"),
          path: "http-api-mock.tml",
          root: "http-api-mock.tml",
        },
      
        "http-api-readme.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\xcf\x6f\x22\x37\x14\xbe\x23\xf1\x3f\xbc\x86\x4b\x58\xb1\x03\x5b\xb5\x17\xa4\x1e\xb2\x59\x36\xa5\x6a\x37\x28\xb0\xa7\x28\xea\x18\xfb\xc1\x38\xeb\xb1\xa7\xf6\x1b\x12\x34\xe2\x7f\xaf\xec\x19\x08\xb0\x40\x48\xca\xae\xaa\xaa\x39\x64\x34\x9e\xe7\xf7\xeb\xfb\xbe\x67\x53\x14\xd1\x90\x6c\xce\x29\xba\x1e\xdf\x23\xa7\xe8\x13\x4b\x71\xb1\x80\x5f\x47\xa3\x01\x5c\x0c\xfa\x50\xaf\xfd\x72\xf8\xaf\x5e\xab\xd7\x6e\x7f\xb8\xbd\x32\x70\x83\x99\xb1\x04\x97\xcc\x8a\xbb\xf3\x84\x28\x73\xdd\x76\x7b\x6a\x6c\x58\xe6\xcc\x8a\x88\x9b\xb4\x3d\x66\x62\x8a\xed\xa2\x88\x06\x8c\x7f\x61\x53\x1c\x30\x4a\x16\x8b\xe6\x81\x1d\xe5\xeb\xd7\x5b\x7c\xe4\x67\xf3\x97\x0e\x18\xb0\x9c\x0c\x4c\x51\xa3\x65\x84\x02\x7c\x24\x60\x99\x84\x89\xb1\x40\x09\x82\x0b\x2e\x20\xde\xe9\xad\x72\x19\x47\x3e\xde\x28\xc1\xe0\x16\x1f\x33\xe4\xe4\xc2\xee\xdc\xa1\x05\x32\x20\xd3\x4c\x61\x8a\x9a\x80\x69\x01\x99\x35\x33\x29\x30\x58\x8c\x19\xff\x82\x5a\x80\xd4\x84\x76\xc2\x38\x7a\xf3\xca\x40\x40\xae\x05\x5a\x25\x35\x82\x18\x97\x26\x8c\x93\x34\xba\xeb\x03\xc6\x71\x3c\x35\xf5\x1a\xcd\x33\x84\xf7\xdb\x6e\x8a\x7a\x0d\x00\xe0\x03\x2a\x24\x3c\xe7\x46\x13\x3e\x52\x74\x59\x3e\x5b\xbe\x2c\xa9\xa7\x4d\x40\x6b\x8d\x2d\x4d\xaf\x90\xf6\xdb\x9d\x3f\xd5\x5f\x75\x7a\xb1\x88\xf6\x74\xb8\x55\x7a\x6d\x96\x6e\x3f\x67\x82\xed\xcf\xa0\x05\x45\x11\x95\x26\x17\xa1\xb2\x4d\xf7\x1b\x5f\x36\x82\x6c\xa7\x7e\xa1\xd4\xfe\x18\xcb\xa7\xd4\x14\xfe\x35\xe1\xfc\xf6\xee\x45\x15\x85\x9d\xeb\x65\x5d\x5a\xdc\x59\x56\x51\x44\xe5\xa7\x5d\xe5\x6c\x7c\xd9\x2a\xe7\x75\x1d\x5e\x04\x1a\x78\x36\xf4\xc9\x33\xcf\x38\x2c\x99\x37\x31\x4a\x99\x07\xa9\xa7\x90\x22\x25\x46\xb8\xc0\x68\x64\x3c\x01\xd4\x22\x33\x52\x53\x20\x51\xa3\x51\x95\x02\x05\x0c\xae\x87\x23\x68\xef\x89\xd9\x86\x85\xb7\x6e\xc0\x1f\xc1\x5f\x17\xe2\x49\xae\x39\x9c\x7b\xb1\xbc\xf1\x9a\xba\x18\xf4\x9b\xab\xb6\xd0\x23\xbc\xf1\x5a\xca\x49\xaa\x65\x73\x2a\xc8\x42\xb6\x55\x4c\x8b\x1c\xe5\xac\x4a\x79\xc5\x7a\x8b\xdc\x58\x01\x66\x12\x96\x0f\xf6\x0d\x02\xfb\x1f\x12\xc9\x13\xaf\x67\x81\x4a\xe2\x0c\x45\xd8\x58\xaf\xfd\x36\xbc\xfe\x04\x01\x22\x4d\x5e\x57\x7e\x75\x29\xff\x08\x46\x89\x74\xf0\x20\x95\x02\xa9\x81\x72\xab\xc1\x62\x78\x30\xb0\xe8\xbc\x88\xe5\xcc\x0f\x00\x46\xb9\x03\x6e\x04\x06\x99\xbf\x85\x5e\x10\x38\x0a\xb8\xc1\xbf\x72\x74\x04\xef\x8d\x98\x57\x82\xf4\x35\x57\x04\x29\xc3\xbe\x1d\xcd\x33\xec\x02\xcb\x32\x25\x39\xf3\x05\xb4\xef\x9d\xd1\x2b\xd8\xe2\x38\x2e\xdf\x8b\x02\x52\x96\xdd\x30\x2d\x4c\x1a\xf2\xde\xa8\x1a\xce\xc6\xce\xe8\x33\x38\xbb\x0f\x8f\xc5\x13\xee\x6b\xf9\x0c\xcb\x54\x2f\x8d\xc0\xca\x75\xbd\xf6\x91\x49\x95\x5b\xec\xc2\xcf\x9d\x4e\xbd\x36\xcc\x39\x47\xe7\xba\xf0\x63\xe7\xdd\x2e\x0f\x37\xe8\x32\xa3\x1d\x7e\xab\x92\x4a\x62\xed\x2f\xa6\xd1\x80\xfe\xa7\x8f\xd7\xfb\x49\x78\x04\x05\xfb\x7a\x62\x9e\x27\xa0\xb7\xaa\xf0\x76\x40\x86\x98\xf2\x7c\x2b\x99\xe7\x80\xcd\x98\x54\x6c\xac\xd0\x53\x63\x75\x1c\x78\xaa\x1d\xad\xd2\x2a\xe3\x6d\xce\xbc\x08\xa3\xce\x77\xc0\xa8\xdc\x76\x16\x5a\x70\xd6\x85\x77\x9d\xd6\xfa\x54\x69\x34\xe0\xaa\x77\x60\x28\x74\xb3\x7c\xac\x24\xff\x53\x8a\x23\x90\x09\x27\xcc\x73\xc0\x5c\x21\x79\x5c\x6c\x18\x0b\x0c\xa6\x72\xe6\x87\xd8\x57\x23\x61\xe7\xd1\x1e\x10\x9a\x58\x93\x6e\x28\xbd\x82\xb9\x72\xe3\xe7\x8d\x1f\x31\x2e\x57\x04\xcc\x87\xf0\xd4\xac\xd7\x6c\xd5\xd6\x08\xfa\xe4\xcf\xed\xad\x99\x14\x3f\x55\x1a\x43\xc6\x2c\x4b\x91\xd0\x7a\x07\xc1\xcc\x2f\x50\x75\xd6\x0b\xd4\x24\x27\xf3\xf0\xa1\xcc\x7b\xdf\xe0\x18\x2c\xfd\xb8\x15\x17\x3c\x18\xeb\x4d\xfd\x87\x2a\xff\x1e\x0c\x7a\x8d\xca\x0f\x92\xea\x38\x2a\x85\x13\xff\x65\x6c\x52\x6a\xa5\xf0\x57\x31\xe9\xdf\x2e\xe6\xdb\xa3\xb1\x68\x1d\x6d\x79\xb7\x0e\xdb\xe0\xf3\xa9\x66\xc1\xf2\x5a\xf8\x1c\x80\xa5\x1d\x30\x22\x4c\x33\x7f\xab\x36\x90\x57\x4b\xff\x8d\xd9\x00\x0f\x92\x92\x4d\x7f\x01\x0f\x5b\xcd\x88\xb1\x11\xf3\x93\xce\x8f\x6f\x7c\x6b\x59\xbf\xb2\x9f\xfe\xd6\xf2\xd3\x3a\x1b\x3f\xf4\x7e\xef\x8d\x7a\x27\x22\xe4\xf2\x97\xd2\x31\x13\x45\x04\xdb\xff\x8f\xa7\x13\xc2\xf9\x77\x00\x00\x00\xff\xff\x64\x3c\x14\x5c\x6e\x10\x00\x00"),
          path: "http-api-readme.tml",
          root: "http-api-readme.tml",
        },
      
        "http-api-test.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xdf\x4f\xe3\x46\x10\x7e\x2e\x12\xff\xc3\xd4\x12\x27\xfb\x1a\x6d\xda\xd7\x54\x79\xa0\xc0\xdd\xd1\x52\x88\x48\x50\x1f\xab\x8d\x3d\x81\xbd\xdb\x78\xc3\xee\x3a\x80\xac\xfc\xef\xd5\xec\x3a\x0e\xe4\x12\x70\x48\x82\x8e\xc6\xf7\x70\x08\xff\xf8\x66\xe6\xdb\x99\x6f\x76\xc7\x8c\xb9\x86\x70\x7f\x0f\x00\x00\xc7\x98\x5a\x03\x6d\x18\xa2\xd5\x22\x36\xec\x1c\xef\xc2\x38\x33\x56\x0d\x59\xd7\xf2\xf8\xdb\xb1\x30\x23\xc9\x1f\x42\x65\x58\xd7\x26\x2a\xb3\x51\xe4\xdf\x1c\xa3\x36\x42\xa5\xd0\x86\x60\xfc\x5b\xb0\xbf\x17\xed\xef\xed\xef\x0d\xb2\x34\x06\x8d\xd7\xc2\x58\xd4\x97\x2a\xb3\x18\x6a\xfa\x5f\xc3\x8d\xb5\xa3\xcc\x0a\xc9\xdc\x55\xdd\x00\x3e\x12\xf0\x91\xae\xf2\x91\x60\x5f\x7a\xbd\xce\x61\xe7\xb4\x51\xa2\x1a\xab\x45\x7a\xdd\x00\x8d\x46\x65\x3a\xc6\xe2\x42\x04\xf9\xfe\xde\x4f\x1e\x92\x7d\xe1\x69\x22\x31\x0c\x3e\x9f\xf4\x82\xc6\x60\x68\x59\x77\xa4\x45\x6a\x07\x61\xd0\x3c\x30\xcd\x03\x13\x94\x70\x33\x9c\xc8\x19\x66\x9f\xd1\x1e\x4a\x19\x55\xc7\x6a\xb6\x46\x59\x5f\x8a\xf8\x5f\x91\x3c\x0f\xeb\x68\x98\x47\xed\x5c\x74\x57\x76\xf1\x48\x23\xb7\xb8\x18\xee\x6a\x1d\x27\xaf\x46\x89\x07\x9e\x87\x3d\x3e\x39\x3b\xe9\x9d\xac\x81\x7c\x8c\x12\x1d\xf2\x84\xbc\x6e\x36\xa1\x87\xc6\x7a\xaa\xf3\x9c\x75\xad\xce\x62\xcb\x2e\xfa\x5f\x31\xb6\xec\x9c\x0f\x71\x32\x81\x31\x97\x82\xdc\x31\x60\x6f\x10\x34\x25\x21\x8e\xb9\x04\x35\x00\x0e\x4b\x5e\x72\xd0\x1a\x63\xa5\x13\x18\x68\x35\x84\x69\x16\x15\xf9\xf7\xa2\xd5\xd0\xc2\x47\x8b\xc6\x8a\xf4\x9a\xf5\xa2\x9c\x9c\xa5\x8c\x4e\xfa\xd0\x6a\xc3\x39\xde\xfd\xad\xe2\x6f\x87\x9d\xd3\x8b\x11\x6a\x6e\x95\x0e\xfd\x22\x50\xc2\xb6\xda\xa5\x31\x2a\x14\x5f\x3d\x0d\x48\xfa\x44\xa7\xd5\x88\xd3\x27\x5c\xaa\x13\x54\x76\xef\x13\x3e\x4c\x85\xf4\x38\xcd\x26\x5c\x16\x15\x02\x6e\x05\x0c\xdc\x09\x7b\x03\x45\xa1\x5c\x6b\x95\x8d\x18\xad\x4e\xf1\x50\x48\xb8\x8e\xe0\x47\xcc\x07\x79\x6e\xd5\x99\xba\x43\x0d\x0b\x42\x2c\xe2\x0c\xa2\x69\x68\x28\x71\xd8\x00\xd4\x9a\xfc\x3b\x53\x3c\xf1\xd9\xf5\x67\xf7\xe2\x3c\xcc\x73\xf9\x02\xce\xec\xe1\xa2\xf6\xc5\xc0\x61\xfd\xdc\x86\x54\x48\x2a\x49\x28\xfe\x11\xab\x86\x7d\xe2\x42\x62\x12\x06\xdd\x1b\x95\xc9\x04\x6e\xf8\x18\xc1\x64\x71\x8c\xc6\x0c\x32\x29\x1f\x40\x2a\x9e\x60\x02\x84\xd8\x82\x55\xec\x43\x0b\x0e\x7e\xb9\x65\x81\x8b\xa5\x70\x66\xe2\x7f\x78\xd3\x1d\x6e\xcc\x76\x4c\xb3\x19\x9b\xb1\xbd\x27\x1e\x63\x95\x5a\xbc\xb7\x2e\x13\x16\x30\xdd\x86\xa4\x5f\x54\x71\x18\xdb\xfb\x86\xbb\xb5\x21\x02\x0d\x1f\x63\xb2\xac\x3e\xa6\xb5\xb1\x36\x57\x55\xac\x3c\xa2\x45\xe3\x6d\x99\x63\x54\x03\x44\xcc\x25\xde\x66\x68\x6c\x21\xac\xf0\x9d\xb4\x54\x4a\xe3\x32\xef\xa3\x06\xf8\x32\xda\x04\x87\xb1\x5b\x9a\x84\xdc\x26\x17\xb7\xce\xe6\x6a\xf6\x9e\xf0\x6a\xa6\x94\x92\x29\x4f\x2b\x3d\x83\x7a\x96\x77\x24\x12\xac\x8b\x7a\x8c\xd4\x4b\x43\x8d\x86\xe4\xf9\xb6\xbc\x2f\x06\x84\xc3\x8e\x54\x82\x44\x99\x5b\x9f\xae\xe5\x36\x33\x17\x7f\x55\x23\x4f\x63\x8c\x82\x12\xc2\xb8\xd7\x20\x26\xa8\x83\x42\x82\x35\x9a\x91\x4a\x0d\x42\x3f\xb3\x70\xad\x2c\x1c\x24\x2c\x68\x3c\xb1\xd2\x28\x1d\xa8\x4a\x5f\x25\x8b\xb4\x24\x4f\xec\xcc\x87\xfc\x87\x4a\x1e\xd8\x19\xa6\x61\x04\xed\x36\xfc\xfa\x8a\x4c\x29\xfd\x98\x45\x49\x98\xc1\xab\xd2\xe0\x19\xb0\xb9\xb6\xf9\x9a\x9e\x29\x65\xe5\xae\xc9\x97\xf4\xcd\xaa\x4d\xf3\x07\x6e\x99\x7e\xe7\x59\xf7\xcd\xba\x6f\xee\x72\xdf\x9c\x3b\x5f\x10\x8d\xac\xe3\xb6\xf1\xa7\xc7\x75\x27\xad\x3b\xe9\x8e\x74\xd2\x25\xd9\xe1\x15\x66\xae\x99\xba\xcc\x12\x2a\xad\x7c\xfe\x74\x6d\x68\x61\x27\x7d\xd6\xec\xfb\x3a\x81\x6e\xac\x9d\x8e\xb9\x76\x6b\x04\xfd\x07\x4b\xf9\x94\x0d\x06\xa8\xfd\x2d\xb7\x74\xff\x68\x61\xb1\xeb\x26\x3d\xab\xb6\xd7\x0a\x52\xea\xa7\x30\x1b\x38\x83\x7c\x20\x67\x6b\xed\xdc\xa8\x76\x1e\x15\x7e\xbd\x81\x80\x16\xa6\xde\x46\x45\x0b\x63\xff\x6b\x29\xf5\x13\xc5\x39\x29\xcd\xfc\xc5\xad\x09\xa9\x37\xba\x93\xa7\x92\x5a\x46\x6b\x19\xad\x65\xf4\x7d\xc9\xe8\x92\x79\x82\x57\x31\x37\x4f\x28\xe3\x29\x2a\x37\xda\xc6\xd0\x60\x83\x63\x80\x47\x61\xe5\x39\x68\x9e\x26\x9f\x04\xca\x64\x5a\xfd\x10\x50\xb0\x01\x04\x5f\x8d\x4a\x03\x08\x66\x1f\x90\x60\x32\x79\xa2\x64\xd9\x9c\x8e\x3d\x09\xbb\xd5\x06\x02\xa0\x3a\x39\x49\x29\x53\x74\xf8\xa1\x9f\x45\xcc\xff\x12\xba\xd9\xc0\xef\xeb\x11\x84\x0e\x6a\xe9\x81\x7d\x7d\xd2\x5e\x30\xb0\x68\x14\xb0\x48\x77\xaf\xb6\x35\x09\x20\x42\x77\x50\x86\xb7\xa7\xc2\xe7\xea\x48\xa5\x16\x53\xfb\x16\x3a\x5c\x1a\x7b\x1b\x25\x2e\xcd\x55\xdb\x1b\xfa\x6f\xc2\xdf\xcd\xac\x87\x6a\xe5\xaf\xbc\xab\x6c\x0e\xbd\xd5\x9d\xdb\x1c\xd6\x43\xeb\x7a\x68\xfd\x23\x0c\xad\xa7\x7f\x49\x52\xcf\xad\xdf\xc5\xa1\x61\x87\xda\xd5\x7f\x01\x00\x00\xff\xff\x9e\xcc\x69\xd2\xfb\x26\x00\x00"),
          path: "http-api-test.tml",
          root: "http-api-test.tml",
        },
      
        "http-api.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5b\x6f\xe3\x46\xd2\x7d\xa6\x01\xff\x87\x0a\x1f\x02\x2a\xd0\xd0\xf8\x5e\x19\x18\xf8\xec\xb1\xc7\xf1\x26\xb1\x0d\xdb\xb3\x8b\xc5\x62\x91\xb4\xc9\x92\xdc\x19\xaa\x9b\x69\xb6\x7c\x59\x41\xff\x7d\x51\x7d\xe1\x45\x43\xc9\x94\x6c\xcb\x33\xb3\xf1\xc3\x68\xc8\xbe\x55\xd5\xa9\x3a\xa7\x49\xf6\xde\x1e\xcc\x66\xf1\x95\x56\xd3\x54\xc7\xe7\x37\x7f\x60\xaa\xe3\x33\x36\x41\xf3\xcf\x7c\x7e\xc8\xd2\x4f\x28\x32\xc8\x70\xc4\x05\x96\xc0\x04\x70\xa1\x51\x8d\x58\x8a\x70\x7f\xcb\xd3\x5b\x60\x79\x2e\xef\x4b\xd0\xb7\x08\x3f\x5d\x5f\x5f\x1c\x5c\x9c\x82\x96\x90\xf1\x3b\x54\xda\xdc\x1d\x71\xc1\x72\x90\x05\x2a\xa6\xb9\x14\x20\x47\xbb\x3b\x7b\x7b\xa6\x69\xcc\xef\x50\xc0\xfb\xcb\x8f\x47\xa0\xf0\xcf\x29\x96\x1a\x46\x52\x99\xa6\xd9\xec\xcf\xa9\xd4\x08\xcb\x6d\x03\xfd\x58\x60\x0c\xd7\xb7\xbc\x04\x5e\x42\xa1\xe4\x1d\xcf\x30\x83\x9b\x47\x33\xc1\xb4\x44\x15\x9b\x95\xfe\x9f\x4f\x8a\x1c\x27\x28\xf4\xee\x0e\x8d\xe9\xe5\x71\xe5\xe6\x6c\x77\x27\x08\xde\xcb\xa9\xd0\x51\x2a\x85\xc6\x07\x1d\xbf\xb7\xbf\x03\x88\xb8\xd0\x43\x40\xa5\xa4\x1a\x50\xb7\x23\xcc\x51\xe3\x62\xbf\x21\x94\x5a\x71\x31\x1e\xd8\x9e\xd4\xf1\x04\x3f\x9b\xad\xee\x15\xd5\xf6\x5d\xb0\xf4\x13\x1b\xe3\x7c\x1e\xaf\xb2\xb9\x69\xc2\xc7\x22\x63\xcb\x4d\x18\x92\xef\xb6\xcb\x41\x4a\x68\xb4\x57\x68\xb5\x34\xd6\x99\xcf\xdb\xb6\x1f\xe4\xf9\xf2\x15\xfc\xaf\x89\x0d\x17\x14\xa6\x7f\xfd\x7b\x7d\x97\x16\x42\xfb\x5e\x61\xa7\x5f\xb3\x59\x6c\x9b\xba\xfc\x69\xb5\x2c\xf8\xf3\x8c\x28\xcf\x77\x77\x4c\x62\xad\xea\x4d\xb5\xb0\xaa\x6c\xf0\xa1\x90\x25\x9a\x4c\x9d\xa0\xbe\x95\xd9\xe7\x19\x7c\xab\x75\x01\x37\x36\x1f\xe3\x1e\xa9\x6b\x96\x6c\xe5\x2d\xa5\xd9\x0f\x34\xcd\x54\xf3\xbc\x4e\x5b\x0f\xe5\xa9\x18\xc9\x55\xed\x2e\xe6\x2b\x7a\xb8\x6c\x5b\xd1\xc3\x95\xc4\x8a\x1e\x2e\x9f\x96\xf7\xe8\x13\x6e\x72\x05\x28\x39\x18\x17\x25\x45\x94\xbd\xcb\x98\x66\xa0\x70\xcc\x54\xc6\xc5\x18\x14\xa6\x52\x65\x25\x70\x01\xd9\x4d\x45\x42\xed\x98\xf6\x4b\x84\x3e\x58\x18\x7b\x4a\xd3\x0a\x84\x04\x5c\x4b\xcd\x72\x42\x07\x7e\xff\xa3\x94\x22\x09\x35\xdd\x08\x7f\xef\xe7\xde\xa5\x33\xbe\x4a\x28\x6b\xb9\x96\xa0\xb0\x50\x58\xa2\xb0\x5c\xab\xb0\x2c\xa4\x28\x3d\xb3\x6a\x09\xac\xc9\xac\x66\x1d\x96\xe7\x55\x30\xe4\xc8\x0c\x7b\xb5\x30\x78\xbb\x9b\x91\xb8\x60\x63\x6c\x06\xa2\x60\x63\xa4\x38\x04\x70\xe9\xac\xbf\x40\xb5\xd8\x49\xb5\x9b\x6c\x7f\x13\xd3\xcb\x0a\xd7\x76\x68\x7f\x73\x3e\xfa\xa9\x6d\xaf\xf5\x99\xa8\xb6\xa0\x9a\xce\x23\xe6\xf5\xae\x46\xc5\xf9\x69\x4b\xfc\x56\xe6\x59\x59\x57\x32\x2b\x38\xdc\x32\x91\xe5\xa8\x4a\x23\x73\xb6\xde\x29\x37\x49\x01\xcd\x8c\x95\x4a\x96\x95\x10\x56\xac\xd0\x57\x11\x1d\x2c\xde\x38\x6b\x92\x51\xb1\x09\x6a\xc5\x53\x53\x1e\xf4\x1b\xff\x6a\x7f\xa9\xc9\x2e\x2c\x55\x1f\x6d\xac\x03\x70\x86\xf7\xa0\x50\x4f\x95\x20\xe7\x05\xde\x57\xab\x72\x51\x6a\x26\x52\x92\x61\x72\xb0\xe5\x48\xb5\x16\xa3\xb9\xf6\xf6\x9c\x3d\xf1\xee\xce\x68\x2a\x52\x9a\x34\x9a\x2c\xda\x38\xf4\x44\xd8\xc7\xc0\x01\xfc\xe0\xed\x30\x7e\x5b\x13\xe1\x7b\x77\xd3\xdc\xab\xa2\x91\xc0\x64\x68\x6f\x78\xbb\x12\xbf\x96\xb9\x3f\xaf\xdd\x35\x45\xad\x30\x45\x7e\x67\x49\xdd\xe0\xea\xeb\x4b\x4b\x18\xa3\x76\xa5\x05\x9c\xfa\x12\x86\x54\x6e\xec\x8e\xf1\x9c\xdd\xe4\xd8\x2a\x3c\x5b\x3c\x4f\x81\x6a\xf6\x30\x66\xf9\x4b\x39\xd5\x98\xc0\xde\xcc\xfc\x67\xbe\x47\x4b\x98\x86\x5f\x8d\x80\x24\x70\x7a\xf6\xe1\xdc\xf6\x3c\xbe\xba\x38\x3f\xbb\x3a\x7e\x77\x78\x7e\xf4\xcf\x04\xfe\x76\x75\x7e\xe6\x82\x1b\x51\x16\xfa\xe8\x0c\x8c\x47\x51\xaa\x1f\x60\x19\xfb\x9a\x00\x4e\x20\xd9\xaf\x00\x39\xc3\xfb\x6b\xc5\x52\x8c\x48\x96\x33\x1c\xa1\xa2\xcc\x8e\x7d\xf3\xf1\x84\xeb\xc8\x5f\x98\xe9\x43\xb7\x9a\xb9\x0a\x07\xc3\x6a\xa6\x7f\x70\x7d\x6b\xa7\x9a\xc4\xc7\x22\x8b\x06\x83\x01\x05\x1a\x00\x20\xd5\x0f\xf1\x4f\xc8\x32\x54\xd1\x20\xbe\x42\x1d\x85\xc6\x2c\xa1\xdf\x5d\x3f\x16\x18\x0e\x21\x64\x45\x91\xf3\xd4\xd4\xca\x1e\x15\x68\x58\x8d\x7d\xc2\x1a\x07\xa2\xc5\xcc\x81\x99\x85\x83\x61\xd3\xaa\x0f\x1c\xf3\xac\xac\x06\x9a\xcb\x99\x9d\xdd\xff\x85\x53\x95\x87\x89\x31\xf4\xd2\x4e\x16\x0d\xe2\x8f\x97\xbf\x10\x90\x5c\x8c\xa3\xc1\xd0\xf6\x9f\x5b\xa7\xec\x85\x21\x26\xb3\x8f\xa0\x88\x92\xa1\x3e\xe7\x62\xb7\xc3\xd4\x0f\x1e\x80\x88\x06\xd2\x20\x3e\x32\x03\xbe\xdb\x07\xc1\x73\x68\x98\xb1\xd4\xd1\x63\x42\x6e\x14\x85\x1f\x18\xcf\x31\xf3\x89\xb9\x36\xf1\xb9\x4c\x4e\xc9\xb2\xf5\x03\x64\x82\x64\x72\x28\x4c\xc8\x81\x61\x47\x73\xcf\x18\x36\xe2\xe8\x2f\x5d\x49\xa3\x52\x2e\xcc\xbe\xd1\x45\x2b\xd9\x37\xd3\x52\xe6\x47\x94\xda\xf1\x95\x66\x7a\x5a\x9e\xff\x3c\x7c\x52\xb6\x67\x46\x56\x12\x83\xd5\x7c\xf0\xe3\xcb\x04\xbf\x44\xc5\x59\xce\xff\x83\xd9\xc6\x38\x18\xb1\x77\xf2\x7e\xaf\xb8\x46\xb5\x58\x4c\x5f\x26\x2a\xc1\x13\x05\xe9\x55\x1f\x8e\x30\xa7\xa7\xc6\xbe\xd5\x18\x04\xce\x52\xfb\xb7\xd2\xde\x20\x08\x4b\x93\x00\x61\x02\xed\x74\xd8\xdd\x09\x1a\x4e\x38\x07\x04\xcf\x6b\xd6\xb7\xbb\xe0\x95\xbc\x9f\xda\x2e\x56\x02\x9f\x43\xe9\x49\x31\xbd\xc9\x79\xfa\x1b\xcf\x5a\xc4\x7e\x71\x7e\x75\x6d\x6e\x34\xf9\x9c\xa6\xe8\xe2\x74\xff\xa4\xb4\x25\x56\xb7\xcb\x2d\x40\xd6\x41\xeb\x41\xb0\x29\xa9\x07\x4f\x65\x50\x85\xd0\x26\xa4\x4e\xca\xdf\x27\xe5\x03\x9f\x27\x41\x70\xc7\x14\x70\x91\xca\x09\x6d\x6d\x36\x7c\x00\xb5\x33\xd5\x6c\x45\xee\x12\x0a\x47\x98\x4a\x8a\x10\xd9\x72\x28\xb3\xc7\x68\x30\x88\xed\xbd\xe8\x7b\xbf\xe6\x67\xa4\x44\x3e\xac\x41\x48\x05\x53\x25\xd2\xbf\x6c\x42\xe9\x9c\xc1\x54\xe5\xf1\xdf\x59\x3e\xc5\xb2\x7f\xcc\x82\x60\x81\x47\xdc\xcd\x5e\xa1\x6c\x04\xb3\xda\x9e\x19\xd6\x30\xfb\xad\x1e\x90\x53\x09\x6c\x02\x34\x3d\x14\x86\x49\x85\xde\x70\x23\xfc\x3d\x0d\x2f\x51\xf2\xaa\xfe\x6a\x29\x1f\x42\x8d\x5d\x03\xf7\x8d\x11\x4c\x2b\x4e\x92\x6a\x0d\xf7\xdf\x16\xb3\xcd\x89\x7e\x2d\xa6\xef\xa6\x7a\x8b\x4a\xd6\x06\x72\xf5\x66\xc1\x0f\xa9\x64\xf7\xb9\x75\x97\x59\xbf\xab\xf9\xb6\x0b\xdc\x52\xd8\xba\x44\xcf\xbe\xd8\x79\x5b\xd1\xfb\xd8\x5f\xf3\xfc\x5b\xcf\x2d\x69\x9e\x5d\xee\x4d\x35\xaf\x02\x68\x2b\x9a\xb7\xbb\x13\x58\x90\x4e\x8f\x86\x20\x3f\xf9\x8a\x39\x64\xe3\x68\x10\x9f\xa0\x76\x63\xc2\x0a\x49\xf2\x82\xca\xeb\x3b\xf9\xc9\x16\xca\x93\x65\x72\x26\xa1\x1a\x5d\xbf\x2b\xe0\xc2\xe9\xd4\xba\x54\xd1\x9f\xcb\x7d\x45\x48\x65\x52\xc2\x3b\x71\x9a\xd9\x95\x51\xa3\x02\x21\x35\x8c\xe4\x54\x58\xbf\xe6\x2e\x24\x9f\x6d\x04\x36\x79\xb3\xfe\xc2\x1b\x81\xb5\xe8\x88\x66\xab\x52\xe8\x46\x66\x8f\xfd\xa3\xec\xe9\x88\xfe\x50\x29\x3b\x7d\x45\x38\x41\xd0\x48\x85\x04\xaa\xdc\xf9\x1f\xd8\x25\xac\x72\xbd\x43\x78\x5a\x5b\x87\x9a\xc6\x9a\x5b\x87\xba\xf2\xbe\x8a\x0d\xe0\x36\x80\xff\x32\x1e\x29\x97\x7a\xda\xb9\x03\x39\x93\x8e\xfa\xbb\x9f\x39\x69\xb1\xaa\x4b\xd4\x35\xae\xf1\xe5\xc9\x7e\x55\x79\x53\x79\x3e\x3a\xfe\xe5\xf8\xfa\x78\xb9\x24\xfb\x6f\xa1\x5b\x92\x64\xbb\x5c\x1f\x49\x7e\x62\xc2\x2a\xb4\xdb\x79\x98\xfc\xb6\x65\x75\x34\xd1\xfd\x2d\xf1\xca\xfa\x6a\xb4\xfe\xea\xfc\x5d\xe7\x7c\x17\x7f\xbf\xc0\xe3\x03\x65\xe6\x86\xef\x0f\xff\x22\xf6\x6d\x12\x7b\xe5\xdd\x5a\xb4\x7e\x82\xfa\x4d\x39\xfd\xe4\xf8\x7a\xbd\xef\x47\xe6\x1c\xcb\x96\x18\xfe\x04\x17\xbf\x42\x6c\xf7\x89\xcb\x82\xf3\x97\x2a\xbc\xc6\xc3\x96\x31\x63\xd5\xd3\x16\x8d\x35\xf3\x63\xd6\xfd\xd6\xcd\x65\x62\x27\xef\xbe\xc4\x1b\xb7\x67\x7c\x41\xfb\x3a\x98\xf7\x89\x97\x61\xe7\x3f\x0f\xa1\x82\xe0\xb9\x4a\xf6\x9a\x5f\xc4\xbe\x82\x50\x7f\x8d\x22\xd7\xfa\x54\xd6\xfd\xce\xd0\x1e\xe4\x5a\x29\x60\x6e\x18\xcb\xf3\x3e\xc7\x59\xdc\x61\x89\xe5\x32\xf6\x6c\xf1\x32\x07\x19\xb7\xa7\x5f\x07\x79\xfe\xd6\x12\x66\x11\xda\x8e\x8a\xdd\x31\x05\x52\x65\xa8\x86\xf6\xe7\xf0\xd1\x1d\x0e\x35\xad\x7c\x04\x32\xeb\x14\xb8\x28\x34\xdd\xc3\xc1\x8f\xe0\x15\x8d\x3a\xab\x4c\xf9\xee\x32\x8b\x23\x77\x5c\xb6\xee\x13\x98\x51\xb0\x6f\x7a\x1a\x3b\x00\xf3\x12\x17\x1a\x43\x56\xa6\xa1\xab\x45\x57\x8f\x4f\x5a\x72\xf8\xb8\x99\x2d\x87\x8f\x2b\xad\x31\xcd\x8d\x3a\x6c\x5b\x45\xd1\x23\x96\xf5\xe7\x24\xe9\xba\x60\x63\x3c\x93\xf5\x17\x89\xc6\x49\x39\xef\x89\x2a\x8a\x95\xbb\x86\xc5\x93\x74\x0d\xa3\x17\x9a\xac\xd0\xee\x13\x66\xa9\x14\x77\xf1\x81\x96\x3c\x52\x45\xb1\x54\x4f\xd7\x50\x00\x45\x2d\x78\x57\x9f\x58\x54\xde\x15\x31\x9d\xdc\xa0\x82\x0c\x35\xe3\xf9\x1a\xaf\xa3\x16\xdf\x48\xb6\x5f\xda\xf5\xfb\x72\xe4\xbe\x93\x18\x0c\x08\xac\xae\xa8\xc0\x3e\xbc\xfb\xbf\x66\xea\x14\xe3\xd5\xbb\xb4\x85\x20\x7b\x08\x3b\x62\x5b\x8c\x5f\x34\xb4\xc5\x97\x16\xce\x66\x00\xda\x61\x6c\xee\xee\x56\x1c\x92\xaa\x19\xbb\xb9\xcf\x6b\x53\xcc\x70\x59\x91\xbc\xd8\x36\xd0\xaa\xd7\x1b\x6d\x05\xb7\xb5\xd9\xeb\x71\xaa\xd7\x59\x4a\xb1\x4d\x7c\xd0\xed\x2d\xd7\x21\xa9\x77\x8c\xae\xa1\x79\x62\x37\x71\x48\xfb\x21\x2d\xb0\x92\x45\xf4\x9c\xb0\x7c\xbb\x1b\xcf\x6f\x69\x6b\xb9\xc9\x59\xab\xff\x06\x00\x00\xff\xff\x38\x8e\x2d\x81\x8a\x34\x00\x00"),
          path: "http-api.tml",
          root: "http-api.tml",
        },
      
    
  }
)

//==============================================================================

// FilesFor returns all files that use the provided extension, returning a
// empty/nil slice if none is found.
func FilesFor(ext string) []string {
  return assets[ext]
}

// MustFindFile calls FindFile to retrieve file reader with path else panics.
func MustFindFile(path string, doGzip bool) (io.Reader, int64) {
  reader, size, err := FindFile(path, doGzip)
  if err != nil {
    panic(err)
  }

  return reader, size
}

// FindDecompressedGzippedFile returns a io.Reader by seeking the giving file path if it exists.
// It returns an uncompressed file.
func FindDecompressedGzippedFile(path string) (io.Reader, int64, error){
	return FindFile(path, true)
}

// MustFindDecompressedGzippedFile panics if error occured, uses FindUnGzippedFile underneath.
func MustFindDecompressedGzippedFile(path string) (io.Reader, int64){
	reader, size, err := FindDecompressedGzippedFile(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindGzippedFile returns a io.Reader by seeking the giving file path if it exists.
// It returns an uncompressed file.
func FindGzippedFile(path string) (io.Reader, int64, error){
	return FindFile(path, false)
}

// MustFindGzippedFile panics if error occured, uses FindUnGzippedFile underneath.
func MustFindGzippedFile(path string) (io.Reader, int64){
	reader, size, err := FindGzippedFile(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindFile returns a io.Reader by seeking the giving file path if it exists.
func FindFile(path string, doGzip bool) (io.Reader, int64, error){
	reader, size, err := FindFileReader(path)
	if err != nil {
		return nil, size, err
	}

	if !doGzip {
		return reader, size, nil
	}

  gzr, err := gzip.NewReader(reader)
	return gzr, size, err
}

// MustFindFileReader returns bytes.Reader for path else panics.
func MustFindFileReader(path string) (*bytes.Reader, int64){
	reader, size, err := FindFileReader(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindFileReader returns a io.Reader by seeking the giving file path if it exists.
func FindFileReader(path string) (*bytes.Reader, int64, error){
  item, ok := assetFiles[path]
  if !ok {
    return nil,0, fmt.Errorf("File %q not found in file system", path)
  }

  return bytes.NewReader(item.data), int64(len(item.data)), nil
}

// MustReadFile calls ReadFile to retrieve file content with path else panics.
func MustReadFile(path string, doGzip bool) string {
  body, err := ReadFile(path, doGzip)
  if err != nil {
    panic(err)
  }

  return body
}

// ReadFile attempts to return the underline data associated with the given path
// if it exists else returns an error.
func ReadFile(path string, doGzip bool) (string, error){
  body, err := ReadFileByte(path, doGzip)
  return string(body), err
}

// MustReadFileByte calls ReadFile to retrieve file content with path else panics.
func MustReadFileByte(path string, doGzip bool) []byte {
  body, err := ReadFileByte(path, doGzip)
  if err != nil {
    panic(err)
  }

  return body
}

// ReadFileByte attempts to return the underline data associated with the given path
// if it exists else returns an error.
func ReadFileByte(path string, doGzip bool) ([]byte, error){
  reader, _, err := FindFile(path, doGzip)
  if err != nil {
    return nil, err
  }

  if closer, ok := reader.(io.Closer); ok {
    defer closer.Close()
  }

  var bu bytes.Buffer

  _, err = io.Copy(&bu, reader);
  if err != nil && err != io.EOF {
   return nil, fmt.Errorf("File %q failed to be read: %+q", path, err)
  }

  return bu.Bytes(), nil
}

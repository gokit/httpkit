{{.Struct.Object.Name}} HTTP API 
===============================

[![Go Report Card](https://goreportcard.com/badge/{{.PackagePath}})](https://goreportcard.com/report/{{.PackagePath}})

{{.Struct.Object.Name}} HTTP API is a auto generated http api for the struct `{{.Struct.Object.Name.Name}}`.

The API expects the user to implement and provide the backend interface to provided underline db interaction:

```go
type Backend interface{
    Delete(context.Context, string) error
    Get(context.Context, string) ({{.Struct.Package}}.{{.Struct.Object.Name}}, error)
    Update(context.Context, string, {{.UpdateAction.Package}}.{{.UpdateAction.Object.Name}}) error
    GetAll(context.Context, string, string, int, int) ([]{{.Struct.Package}}.{{.Struct.Object.Name}}, int, error)
    Create(context.Context, {{.CreateAction.Package}}.{{.CreateAction.Object.Name}}) ({{.Struct.Package}}.{{.Struct.Object.Name}}, error)
}
```

It exposes the following methods for each endpoint:

## Create { POST /{{.Struct.Object.Name}}/ }
### Method: `func (api *HTTPAPI) Create(ctx *httputil.Context) error`

Create receives the provided record of the {{.CreateAction.Object.Name}} type which is delieved the 
JSON content to the HTTP API. This will in turn return a respective status code.

- Expected Content Type: 

```http
    Content-Type: application/json
```

- Expected Request Parameters

```
```

- Expected Request Body

```json
{{ mapRandomJSON .CreateAction "bson" "json" }}
```

- Expected Status Code

```
Failure: 500
Success: 201
```

- Expected Response Body

```json
{{ mapRandomJSON .Struct "bson" "json" }}
```

## GET /{{.Struct.Object.Name}}/:public_id
### Method: `func (api *HTTPAPI) Get(ctx *httputil.Context) error`

Get retrives a giving record of the {{.Struct.Object.Name}} type from the HTTP API returning received result as a JSON
response. It uses the provided `:public_id` parameter as the paramter to identify the record.

- Expected Content Type: 

```http
    Content-Type: application/json
```

- Expected Request Parameters

```
    :public_id
```

- Expected Request Body

```json
```

- Expected Status Code

```
Failure: 500
Success: 200
```

- Expected Response Body

```json
{{ mapRandomJSON .Struct "bson" "json" }}
```

## GET /{{.Struct.Object.Name}}/
### Method: `func (api *HTTPAPI) GetAll(ctx *httputil.Context) error`

Get retrives all records of the {{.Struct.Object.Name}} type from the HTTP API.

- Expected Content Type: 

```http
    Content-Type: application/json
```

- Expected Request Parameters

```
```

- Expected Request Body

```json
```

- Expected Status Code

```
Failure: 500
Success: 200
```

- Expected Response Body

```json
[{{ mapRandomJSON .Struct "bson" "json" }}]
```

## PUT /{{.Struct.Object.Name}}/:public_id
### Method: `func (api *HTTPAPI) Update(ctx *httputil.Context) error`

Update attempts to update a giving record of the {{.Struct.Object.Name}} type from the HTTP API returning received result as a JSON
response. It uses the provided `:public_id` parameter as the paramter to identify the record with the provided JSON request body.

- Expected Content Type: 

```http
    Content-Type: application/json
```

- Expected Request Parameters

```
    :public_id
```

- Expected Request Body

```json
{{ mapRandomJSON .UpdateAction "bson" "json" }}
```

- Expected Status Code

```
Failure: 500
Success: 204
```


- Expected Response Body

```json
```

## DELETE /{{.Struct.Object.Name}}/:public_id
### Method: `func (api *HTTPAPI) Delete(ctx *httputil.Context) error`

Get deletes a giving record of the {{.Struct.Object.Name}} type from the HTTP API returning received result as a JSON
response. It uses the provided `:public_id` parameter as the paramter to identify the record.

- Expected Content Type: 

```http
    Content-Type: application/json
```

- Expected Request Parameters

```
    :public_id
```

- Expected Request Body

```json
```

- Expected Status Code

```
Failure: 500
Success: 204
```

- Expected Response Body

```json
```
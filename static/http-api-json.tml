
// json fixtures ...
var (
 {{.Struct.Object.Name.Name}}JSON = `{{ mapRandomJSON .Struct "json" "" }}`

 {{if .CreateAction.IsStruct}}{{.Struct.Object.Name.Name}}CreateJSON = `{{ mapRandomJSON .CreateAction.Struct "json" "" }}`{{else}}`{{ mapRandomTypeJSON .CreateAction.Type }}`{{end}}

{{if .UpdateAction.IsStruct}}{{.Struct.Object.Name.Name}}UpdateJSON = `{{ mapRandomJSON .UpdateAction.Struct "json" "" }}`{{else}}`{{ mapRandomTypeJSON .UpdateAction.Type }}`{{end}}
)

// LoadCreateJSON returns a new instance of a {{.CreateAction.Package}}.{{.CreateAction.Object}}.
func LoadCreateJSON(content string) ({{.CreateAction.Package}}.{{.CreateAction.Object}}, error) {
	var elem {{.CreateAction.Package}}.{{.CreateAction.Object}}

	if err := json.Unmarshal([]byte(content), &elem); err != nil {
		return {{.CreateAction.Package}}.{{.CreateAction.Object}}{}, err
	}

	return elem, nil
}

// LoadUpdateJSON returns a new instance of a {{.UpdateAction.Package}}.{{.UpdateAction.Object}}.
func LoadUpdateJSON(content string) ({{.UpdateAction.Package}}.{{.UpdateAction.Object}}, error) {
	var elem {{.UpdateAction.Package}}.{{.UpdateAction.Object}}

	if err := json.Unmarshal([]byte(content), &elem); err != nil {
		return {{.UpdateAction.Package}}.{{.UpdateAction.Object}}{}, err
	}

	return elem, nil
}

// Load{{.Struct.Object.Name.Name}}JSON returns a new instance of a {{.Struct.Package}}.{{.Struct.Object.Name}}.
func Load{{.Struct.Object.Name.Name}}JSON(content string) ({{.Struct.Package}}.{{.Struct.Object.Name}}, error) {
	var elem {{.Struct.Package}}.{{.Struct.Object.Name}}

	if err := json.Unmarshal([]byte(content), &elem); err != nil {
		return {{.Struct.Package}}.{{.Struct.Object.Name}}{}, err
	}

	return elem, nil
}
